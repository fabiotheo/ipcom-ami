"use strict";var _=Object.defineProperty;var B=Object.getOwnPropertyDescriptor;var H=Object.getOwnPropertyNames;var k=Object.prototype.hasOwnProperty;var G=(e,t)=>{for(var o in t)_(e,o,{get:t[o],enumerable:!0})},F=(e,t,o,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let i of H(t))!k.call(e,i)&&i!==o&&_(e,i,{get:()=>t[i],enumerable:!(n=B(t,i))||n.enumerable});return e};var U=e=>F(_({},"__esModule",{value:!0}),e);var vi={};G(vi,{AMI_EVENTS:()=>l,eAMI_EVENTS:()=>E,eAmi:()=>R,isAGIExecEnd:()=>V,isAGIExecStart:()=>X,isAOCD:()=>W,isAOCE:()=>$,isAOCS:()=>J,isAgentCalled:()=>z,isAgentComplete:()=>Y,isAgentConnect:()=>K,isAgentDump:()=>Z,isAgentLogin:()=>j,isAgentLogoff:()=>ee,isAgentRingNoAnswer:()=>te,isAgents:()=>ne,isAgentsComplete:()=>ie,isAlarm:()=>re,isAlarmClear:()=>oe,isAorDetail:()=>se,isAorList:()=>ue,isAorListComplete:()=>ae,isAsyncAGIEnd:()=>ce,isAsyncAGIExec:()=>le,isAsyncAGIStart:()=>ve,isAttendedTransfer:()=>Ee,isAuthDetail:()=>Ae,isAuthList:()=>me,isAuthListComplete:()=>de,isAuthMethodNotAllowed:()=>pe,isBlindTransfer:()=>Ie,isBridgeCreate:()=>fe,isBridgeDestroy:()=>ge,isBridgeEnter:()=>Ce,isBridgeInfoChannel:()=>Me,isBridgeInfoComplete:()=>he,isBridgeLeave:()=>_e,isBridgeMerge:()=>Se,isBridgeVideoSourceUpdate:()=>Re,isCEL:()=>Le,isCdr:()=>xe,isChallengeResponseFailed:()=>be,isChallengeSent:()=>Te,isChanSpyStart:()=>De,isChanSpyStop:()=>we,isChannelTalkingStart:()=>ye,isChannelTalkingStop:()=>Ne,isConfbridgeEnd:()=>Pe,isConfbridgeJoin:()=>Oe,isConfbridgeLeave:()=>Qe,isConfbridgeList:()=>Be,isConfbridgeListRooms:()=>He,isConfbridgeMute:()=>ke,isConfbridgeRecord:()=>Ge,isConfbridgeStart:()=>Fe,isConfbridgeStopRecord:()=>Ue,isConfbridgeTalking:()=>qe,isConfbridgeUnmute:()=>Ve,isContactList:()=>Xe,isContactListComplete:()=>We,isContactStatus:()=>$e,isContactStatusDetail:()=>Je,isCoreShowChannel:()=>ze,isCoreShowChannelMapComplete:()=>Ye,isCoreShowChannelsComplete:()=>Ke,isDAHDIChannel:()=>Ze,isDNDState:()=>je,isDTMFBegin:()=>et,isDTMFEnd:()=>tt,isDeadlockStart:()=>nt,isDeviceStateChange:()=>it,isDeviceStateListComplete:()=>rt,isDialBegin:()=>ot,isDialEnd:()=>st,isDialState:()=>ut,isEndpointDetail:()=>at,isEndpointDetailComplete:()=>ct,isEndpointList:()=>lt,isEndpointListComplete:()=>vt,isExtensionStateListComplete:()=>Et,isExtensionStatus:()=>At,isFAXSession:()=>mt,isFAXSessionsComplete:()=>dt,isFAXSessionsEntry:()=>pt,isFAXStats:()=>It,isFAXStatus:()=>ft,isFailedACL:()=>gt,isFlash:()=>Ct,isFullyBooted:()=>Mt,isHangup:()=>ht,isHangupHandlerPop:()=>_t,isHangupHandlerPush:()=>St,isHangupHandlerRun:()=>Rt,isHangupRequest:()=>Lt,isHold:()=>xt,isIdentifyDetail:()=>bt,isInvalidAccountID:()=>Tt,isInvalidPassword:()=>Dt,isInvalidTransport:()=>wt,isLoad:()=>yt,isLoadAverageLimit:()=>Nt,isLocalBridge:()=>Pt,isLocalOptimizationBegin:()=>Ot,isLocalOptimizationEnd:()=>Qt,isLogChannel:()=>Bt,isMCID:()=>Ht,isMWIGet:()=>kt,isMWIGetComplete:()=>Gt,isMeetmeEnd:()=>Ft,isMeetmeJoin:()=>Ut,isMeetmeLeave:()=>qt,isMeetmeList:()=>Vt,isMeetmeListRooms:()=>Xt,isMeetmeMute:()=>Wt,isMeetmeTalkRequest:()=>$t,isMeetmeTalking:()=>Jt,isMemoryLimit:()=>zt,isMessageWaiting:()=>Yt,isMiniVoiceMail:()=>Kt,isMixMonitorMute:()=>Zt,isMixMonitorStart:()=>jt,isMixMonitorStop:()=>en,isMonitorStart:()=>tn,isMonitorStop:()=>nn,isMusicOnHoldStart:()=>rn,isMusicOnHoldStop:()=>on,isNewAccountCode:()=>sn,isNewCallerid:()=>un,isNewConnectedLine:()=>an,isNewExten:()=>cn,isNewchannel:()=>ln,isNewstate:()=>vn,isOriginateResponse:()=>En,isParkedCall:()=>An,isParkedCallGiveUp:()=>mn,isParkedCallSwap:()=>dn,isParkedCallTimeOut:()=>pn,isPeerStatus:()=>In,isPickup:()=>fn,isPresenceStateChange:()=>gn,isPresenceStateListComplete:()=>Cn,isPresenceStatus:()=>Mn,isQueueCallerAbandon:()=>Rn,isQueueCallerJoin:()=>Ln,isQueueCallerLeave:()=>xn,isQueueEntry:()=>bn,isQueueMember:()=>Sn,isQueueMemberAdded:()=>Tn,isQueueMemberPause:()=>Dn,isQueueMemberPenalty:()=>wn,isQueueMemberRemoved:()=>yn,isQueueMemberRinginuse:()=>Nn,isQueueMemberStatus:()=>Pn,isQueueParams:()=>On,isQueueSummary:()=>hn,isQueueSummaryComplete:()=>_n,isRTCPReceived:()=>Qn,isRTCPSent:()=>Bn,isReceiveFAX:()=>Hn,isRegistry:()=>kn,isReload:()=>Gn,isRename:()=>Fn,isRequestBadFormat:()=>Un,isRequestNotAllowed:()=>qn,isRequestNotSupported:()=>Vn,isSIPQualifyPeerDone:()=>Xn,isSendFAX:()=>Wn,isSessionLimit:()=>$n,isSessionTimeout:()=>Jn,isShutdown:()=>zn,isSoftHangupRequest:()=>Yn,isSpanAlarm:()=>Kn,isSpanAlarmClear:()=>Zn,isStatus:()=>jn,isStatusComplete:()=>ei,isSuccessfulAuth:()=>ti,isTransportDetail:()=>ni,isUnParkedCall:()=>ii,isUnexpectedAddress:()=>ri,isUnhold:()=>oi,isUnload:()=>si,isUserEvent:()=>ui,isVarSet:()=>ai,isVoicemailPasswordChange:()=>ci,isWink:()=>li});module.exports=U(vi);var O=require("node:events"),Q=require("node:net");var L={BRIDGE_CREATE:"BridgeCreate",BRIDGE_DESTROY:"BridgeDestroy",BRIDGE_ENTER:"BridgeEnter",BRIDGE_INFO_CHANNEL:"BridgeInfoChannel",BRIDGE_INFO:"BridgeInfoComplete",BRIDGE_LEAVE:"BridgeLeave",BRIDGE_MERGE:"BridgeMerge",BRIDGE_LIST_ITEM:"BridgeListItem",BRIDGE_LIST_COMPLETE:"BridgeListComplete",CEL:"CEL",CORE_SHOW_CHANNEL:"CoreShowChannel",CORE_SHOW_CHANNEL_COMPLETE:"CoreShowChannelsComplete",DIAL1:"DialBegin",DIAL2:"DialEnd",DIAL_STATE:"DialState",DTMF1:"DTMFBegin",DTMF2:"DTMFEnd",HANGUP:"Hangup",HANGUP_REQUEST:"HangupRequest",HOLD:"Hold",NEW_CALLERID:"NewCallerid",NEW_CHANNEL:"Newchannel",NEW_CONNECTED_LINE:"NewConnectedLine",NEW_EXTEN:"NewExten",NEW_STATE:"NewState",ORIGINATE_RESPONSE:"OriginateResponse",Q_SUMMARY:"QueueSummary",Q_PARAMS:"QueueParams",Q_MEMBER_ADDED:"QueueMemberAdded",Q_MEMBER_PAUSE:"QueueMemberPause",Q_MEMBER_REMOVED:"QueueMemberRemoved",Q_MEMBER_PENALTY:"QueuePenalty",Q_MEMBER_RING_IN_USE:"QueueMemberRinginuse",Q_MEMBER:"QueueMember",Q_MEMBER_STATUS:"QueueMemberStatus",RTCP_SENT:"RTCPSent",RTCP_RECEIVED:"RTCPReceived",STATUS:"Status"},x=5038,m=`\r
`,b=`\r
\r
`,T=3,D=2,w=10,y={CONNECT:"connect",DO_RECONNECT:"do_reconnect",RECONNECTED:"reconnected",MAX_RECONNECT_REACH:"max-reconnect-reach",MAX_AUTH_REACH:"max-auth-reach",CLOSE:"connection.close",DO_LOGIN:"login",RE_LOGIN:"re-login",LOGGED_IN:"loggedin",SEND:"send",EVENTS:"events",RESPONSE:"response",ERROR_CONNECT:"error.connect",ERROR_LOGIN:"error.login",ERROR_LOGOUT:"error.logout",ERROR_RECONNECT:"error.reconnect"};function v(e){return e===void 0}function d(e){return e===null}function N(e){return d(e)||v(e)?!0:typeof e=="string"||Array.isArray(e)?e.length===0:typeof e=="object"&&e!==null?Object.keys(e).length===0:!1}function P(e){return Number.isNaN(e)}function q(e){return typeof e=="number"&&!Number.isNaN(e)}function p(e){if(d(e)||v(e)||P(e))return;let t=Number(e);return q(t)?t:void 0}function f(e){return e===null||v(e)||d(e)||P(e)?!1:Number.isFinite(e)}function S(e,t){for(let o=0;o<e.length;o++){let n=e[o];if(typeof n=="object"&&n!==null){for(let i in n)if(Object.prototype.hasOwnProperty.call(n,i)&&n[i]===t)return o}}return-1}var C=class{eAmi;timeOutAction;constructor(t){this.eAmi=t,this.timeOutAction=5e3}BridgeInfo(t){return new Promise((o,n)=>{(async()=>{t.Action="BridgeInfo",t.ActionID=new Date().getTime();let i=()=>{this.eAmi.events.removeListener(l.BRIDGE_INFO_CHANNEL,s)},s=r=>{o(r),i()};this.eAmi.events.once(l.BRIDGE_INFO_CHANNEL,s),setTimeout(()=>{n(`Timeout to '${t.Action}' action, try again later...`)},this.timeOutAction);try{let r=await this.eAmi.action(t);r?.Response?.toLowerCase()==="error"&&(n(r),i())}catch(r){n(r),i()}})()})}BridgeList(t){return new Promise((o,n)=>{(async()=>{v(t)&&n(new Error("Options are undefined")),t.Action="BridgeList",t.ActionID=new Date().getTime();let i=0,s=[],r=()=>{this.eAmi.events.removeListener(l.BRIDGE_LIST_COMPLETE,a),this.eAmi.events.removeListener(l.BRIDGE_LIST_ITEM,c)},c=u=>{s.push(u),i===s.length&&(o(s),r())},a=u=>{i=u.ListItems,i===s.length&&(o(s),r())};this.eAmi.events.once(l.BRIDGE_LIST_COMPLETE,a),this.eAmi.events.on(l.BRIDGE_LIST_ITEM,c),setTimeout(()=>{n(new Error(`Timeout to '${t.Action}' action, try again later...`))},this.timeOutAction);try{let u=await this.eAmi.action(t);u?.Response?.toLowerCase()==="error"&&(n(u),r())}catch(u){n(u),r()}})()})}CoreShowChannels(t){return new Promise((o,n)=>{(async()=>{v(t)&&n(new Error("Options are undefined")),t.Action="CoreShowChannels";let i=0,s=[],r=()=>{this.eAmi.events.removeListener(l.CORE_SHOW_CHANNEL,c),this.eAmi.events.removeListener(l.CORE_SHOW_CHANNEL_COMPLETE,a)},c=u=>{s.push(u),s.length===i&&(o(s),r())},a=u=>{i=u.ListItems,s.length===i&&(o(s),r())};this.eAmi.events.once(l.CORE_SHOW_CHANNEL_COMPLETE,a),this.eAmi.events.on(l.CORE_SHOW_CHANNEL,c),setTimeout(()=>{n(new Error(`Timeout to '${t.Action}' action, try again later...`))},this.timeOutAction);try{let u=await this.eAmi.action(t);u?.Response?.toLowerCase()==="error"&&(n(u),r())}catch(u){n(u),r()}})()})}Hangup(t){return new Promise((o,n)=>{(async()=>{v(t)&&n(new Error("Options are undefined")),t.Action="Hangup";let i={hangup:null,hangupRequest:null},s=()=>{this.eAmi.events.removeListener(l.HANGUP,r),this.eAmi.events.removeListener(l.HANGUP_REQUEST,c)},r=a=>{i.hangup=a,d(i.hangupRequest)||o(i),s()},c=a=>{i.hangupRequest=a,d(i.hangup)||o(i),s()};this.eAmi.events.once(l.HANGUP,r),this.eAmi.events.once(l.HANGUP_REQUEST,c),setTimeout(()=>{n(new Error(`Timeout to '${t.Action}' action, try again later...`))},this.timeOutAction);try{let a=await this.eAmi.action(t);a?.Response?.toLowerCase()==="error"&&(n(a),s())}catch(a){n(a),s()}})()})}Login(t){return new Promise((o,n)=>{(async()=>{v(t)&&n(new Error("Options are undefined")),t.Action="Login",t.ActionID=new Date().getTime(),setTimeout(()=>{n(new Error(`Timeout to '${t.Action}' action, try again later...`))},this.timeOutAction);try{let i=await this.eAmi.action(t);i.Response==="Success"?o(!0):i.Response==="Error"?n(i):o(!0)}catch(i){console.log("ERROR LOGIN",i),n(i)}})()})}Logout(){return new Promise((t,o)=>{(async()=>{let n=new Date().getTime();setTimeout(()=>{o(new Error("Timeout to 'Logoff' action, try again later..."))},this.timeOutAction);try{let i=await this.eAmi.action({Action:"Logoff",ActionID:n});this.eAmi.debug&&console.log("logout-response",i),v(i.Response)&&o(i),i.Response==="Goodbye"?t(!0):o(i)}catch(i){o(i)}})()})}Originate(t){return new Promise((o,n)=>{(async()=>{v(t)&&n(new Error("Options are undefined")),t.Action="Originate",t.ActionID=new Date().getTime();let i=()=>{this.eAmi.events.removeListener(`Action_${t.ActionID}`,s)},s=r=>{if(typeof r=="object"&&r!==null&&"Message"in r){let c=r.Message;if(v(c)){n(new Error("Message is undefined")),i();return}if(c.toString().toLowerCase().indexOf("failed")>=0){n(new Error("Action failed")),i();return}o(!0),i()}else n(new Error("Unexpected response format")),i()};this.eAmi.events.once(`Action_${t.ActionID}`,s),setTimeout(()=>{n(new Error(`Timeout to '${t.Action}' action, try again later...`))},this.timeOutAction);try{let r=await this.eAmi.action(t);r?.Response?.toLowerCase()==="error"&&(n(r),i())}catch(r){n(r),i()}})()})}Ping(){return new Promise((t,o)=>{let n=new Date().getTime(),i=null;i=setTimeout(()=>{o(new Error("Timeout to 'Ping' action, try again later..."))},this.timeOutAction),(async()=>{try{let s=await this.eAmi.action({Action:"Ping",ActionID:n});i&&clearTimeout(i),s.Response==="Success"||s.Request?.Completed?t(!0):o(new Error("Ping action failed"))}catch(s){i&&clearTimeout(i),o(s)}})()})}QueueMemberAdd(t){return new Promise((o,n)=>{(async()=>{v(t)&&n(new Error("Options are undefined")),t.Action="QueueAdd";let i=()=>{this.eAmi.events.removeListener(l.Q_MEMBER_ADDED,s)},s=r=>{o(r),i()};this.eAmi.events.once(l.Q_MEMBER_ADDED,s),setTimeout(()=>{n(new Error(`Timeout to '${t.Action}' action, try again later...`))},this.timeOutAction);try{let r=await this.eAmi.action(t);r?.Response?.toLowerCase()==="error"&&(n(r),i())}catch(r){n(r),i()}})()})}QueueMemberRemove(t){return new Promise((o,n)=>{(async()=>{v(t)&&n(new Error("Options are undefined")),t.Action="QueueRemove";let i=()=>{this.eAmi.events.removeListener(l.Q_MEMBER_REMOVED,s)},s=r=>{o(r),i()};this.eAmi.events.once(l.Q_MEMBER_REMOVED,s),setTimeout(()=>{n(new Error(`Timeout to '${t.Action}' action, try again later...`))},this.timeOutAction);try{let r=await this.eAmi.action(t);r?.Response?.toLowerCase()==="error"&&(i(),n(r))}catch(r){n(r),i()}})()})}QueueMemberPenalty(t){return new Promise((o,n)=>{(async()=>{v(t)&&n(new Error("Options are undefined")),t.Action="QueuePenalty";let i=()=>{this.eAmi.events.removeListener(l.Q_MEMBER_PENALTY,s)},s=r=>{o(r),i()};this.eAmi.events.once(l.Q_MEMBER_PENALTY,s),setTimeout(()=>{n(new Error(`Timeout to '${t.Action}' action, try again later...`))},this.timeOutAction);try{let r=await this.eAmi.action(t);r?.Response?.toLowerCase()==="error"&&(n(r),i())}catch(r){n(r),i()}})()})}QueueMemberPause(t){return new Promise((o,n)=>{(async()=>{v(t)&&n(new Error("Options are undefined")),t.Action="QueuePause";let i=()=>{this.eAmi.events.removeListener(l.Q_MEMBER_PAUSE,s)},s=r=>{o(r),i()};this.eAmi.events.once(l.Q_MEMBER_PAUSE,s),setTimeout(()=>{n(new Error(`Timeout to '${t.Action}' action, try again later...`))},this.timeOutAction);try{let r=await this.eAmi.action(t);r?.Response?.toLowerCase()==="error"&&(n(r),i())}catch(r){n(r),i()}})()})}QueueStatus(t){return new Promise((o,n)=>{(async()=>{v(t)&&n(new Error("Options are undefined")),t.Action="QueueStatus";let i=[],s=0,r=()=>{this.eAmi.events.removeListener(l.Q_MEMBER,c)},c=a=>{i.push(a),i.length===s&&(o(i),r())};this.eAmi.events.on(l.Q_MEMBER,c),setTimeout(()=>{n(new Error(`Timeout to '${t.Action}' action, try again later...`)),r(),this.QueueStatus(t)},this.timeOutAction);try{let a=await this.QueueSummary({Queue:t.Queue});s=a.Available+a.Callers+a.LoggedIn,t.MembersCount!==void 0&&t.MembersCount!==null?s=s===t.MembersCount?s:t.MembersCount:s=0,this.eAmi.debug&&console.log("Count queue members: available - %s, Callers - %s, LoggedIn - %s. Need count - %s",a.Available,a.Callers,a.LoggedIn,t.MembersCount??null);let u=await this.eAmi.action(t);typeof u=="object"&&u!==null&&"Response"in u&&(u.Response?.toLowerCase()==="error"?(n(u),r()):(this.eAmi.events.emit(l.Q_PARAMS,u),r()))}catch(a){n(a),r()}})()})}QueueSummary(t){return new Promise((o,n)=>{(async()=>{v(t)&&n(new Error("Options are undefined")),t.Action="QueueSummary";let i=()=>{this.eAmi.events.removeListener(l.Q_SUMMARY,s)},s=r=>{o(r),i()};this.eAmi.events.once(l.Q_SUMMARY,s),setTimeout(()=>{n(new Error(`Timeout to '${t.Action}' action, try again later...`))},this.timeOutAction);try{let r=await this.eAmi.action(t);r?.Response?.toLowerCase()==="error"&&(n(r),i())}catch(r){n(r),i()}})()})}Status(t){return new Promise((o,n)=>{(async()=>{v(t)&&n(new Error("Options are undefined")),t.Action="Status",t.ActionID=new Date().getTime();let i=()=>{this.eAmi.events.removeListener(l.STATUS,s)},s=r=>{o(r),i()};this.eAmi.events.once(l.STATUS,s),setTimeout(()=>{n(new Error(`Timeout to '${t.Action}' action, try again later...`))},this.timeOutAction);try{let r=await this.eAmi.action(t);r?.Response?.toLowerCase()==="error"&&(n(r),i())}catch(r){n(r),i()}})()})}};function V(e){return e.Event==="AGIExecEnd"}function X(e){return e.Event==="AGIExecStart"}function W(e){return e.Event==="AOC-D"}function $(e){return e.Event==="AOC-E"}function J(e){return e.Event==="AOC-S"}function z(e){return e.Event==="AgentCalled"}function Y(e){return e.Event==="AgentComplete"}function K(e){return e.Event==="AgentConnect"}function Z(e){return e.Event==="AgentDump"}function j(e){return e.Event==="AgentLogin"}function ee(e){return e.Event==="AgentLogoff"}function te(e){return e.Event==="AgentRingNoAnswer"}function ne(e){return e.Event==="Agents"}function ie(e){return e.Event==="AgentsComplete"}function re(e){return e.Event==="Alarm"}function oe(e){return e.Event==="AlarmClear"}function se(e){return e.Event==="AorDetail"}function ue(e){return e.Event==="AorList"}function ae(e){return e.Event==="AorListComplete"}function ce(e){return e.Event==="AsyncAGIEnd"}function le(e){return e.Event==="AsyncAGIExec"}function ve(e){return e.Event==="AsyncAGIStart"}function Ee(e){return e.Event==="AttendedTransfer"}function Ae(e){return e.Event==="AuthDetail"}function me(e){return e.Event==="AuthList"}function de(e){return e.Event==="AuthListComplete"}function pe(e){return e.Event==="AuthMethodNotAllowed"}function Ie(e){return e.Event==="BlindTransfer"}function fe(e){return e.Event==="BridgeCreate"}function ge(e){return e.Event==="BridgeDestroy"}function Ce(e){return e.Event==="BridgeEnter"}function Me(e){return e.Event==="BridgeInfoChannel"}function he(e){return e.Event==="BridgeInfoComplete"}function _e(e){return e.Event==="BridgeLeave"}function Se(e){return e.Event==="BridgeMerge"}function Re(e){return e.Event==="BridgeVideoSourceUpdate"}function Le(e){return e.Event==="CEL"}function xe(e){return e.Event==="Cdr"}function be(e){return e.Event==="ChallengeResponseFailed"}function Te(e){return e.Event==="ChallengeSent"}function De(e){return e.Event==="ChanSpyStart"}function we(e){return e.Event==="ChanSpyStop"}function ye(e){return e.Event==="ChannelTalkingStart"}function Ne(e){return e.Event==="ChannelTalkingStop"}function Pe(e){return e.Event==="ConfbridgeEnd"}function Oe(e){return e.Event==="ConfbridgeJoin"}function Qe(e){return e.Event==="ConfbridgeLeave"}function Be(e){return e.Event==="ConfbridgeList"}function He(e){return e.Event==="ConfbridgeListRooms"}function ke(e){return e.Event==="ConfbridgeMute"}function Ge(e){return e.Event==="ConfbridgeRecord"}function Fe(e){return e.Event==="ConfbridgeStart"}function Ue(e){return e.Event==="ConfbridgeStopRecord"}function qe(e){return e.Event==="ConfbridgeTalking"}function Ve(e){return e.Event==="ConfbridgeUnmute"}function Xe(e){return e.Event==="ContactList"}function We(e){return e.Event==="ContactListComplete"}function $e(e){return e.Event==="ContactStatus"}function Je(e){return e.Event==="ContactStatusDetail"}function ze(e){return e.Event==="CoreShowChannel"}function Ye(e){return e.Event==="CoreShowChannelMapComplete"}function Ke(e){return e.Event==="CoreShowChannelsComplete"}function Ze(e){return e.Event==="DAHDIChannel"}function je(e){return e.Event==="DNDState"}function et(e){return e.Event==="DTMFBegin"}function tt(e){return e.Event==="DTMFEnd"}function nt(e){return e.Event==="DeadlockStart"}function it(e){return e.Event==="DeviceStateChange"}function rt(e){return e.Event==="DeviceStateListComplete"}function ot(e){return e.Event==="DialBegin"}function st(e){return e.Event==="DialEnd"}function ut(e){return e.Event==="DialState"}function at(e){return e.Event==="EndpointDetail"}function ct(e){return e.Event==="EndpointDetailComplete"}function lt(e){return e.Event==="EndpointList"}function vt(e){return e.Event==="EndpointListComplete"}function Et(e){return e.Event==="ExtensionStateListComplete"}function At(e){return e.Event==="ExtensionStatus"}function mt(e){return e.Event==="FAXSession"}function dt(e){return e.Event==="FAXSessionsComplete"}function pt(e){return e.Event==="FAXSessionsEntry"}function It(e){return e.Event==="FAXStats"}function ft(e){return e.Event==="FAXStatus"}function gt(e){return e.Event==="FailedACL"}function Ct(e){return e.Event==="Flash"}function Mt(e){return e.Event==="FullyBooted"}function ht(e){return e.Event==="Hangup"}function _t(e){return e.Event==="HangupHandlerPop"}function St(e){return e.Event==="HangupHandlerPush"}function Rt(e){return e.Event==="HangupHandlerRun"}function Lt(e){return e.Event==="HangupRequest"}function xt(e){return e.Event==="Hold"}function bt(e){return e.Event==="IdentifyDetail"}function Tt(e){return e.Event==="InvalidAccountID"}function Dt(e){return e.Event==="InvalidPassword"}function wt(e){return e.Event==="InvalidTransport"}function yt(e){return e.Event==="Load"}function Nt(e){return e.Event==="LoadAverageLimit"}function Pt(e){return e.Event==="LocalBridge"}function Ot(e){return e.Event==="LocalOptimizationBegin"}function Qt(e){return e.Event==="LocalOptimizationEnd"}function Bt(e){return e.Event==="LogChannel"}function Ht(e){return e.Event==="MCID"}function kt(e){return e.Event==="MWIGet"}function Gt(e){return e.Event==="MWIGetComplete"}function Ft(e){return e.Event==="MeetmeEnd"}function Ut(e){return e.Event==="MeetmeJoin"}function qt(e){return e.Event==="MeetmeLeave"}function Vt(e){return e.Event==="MeetmeList"}function Xt(e){return e.Event==="MeetmeListRooms"}function Wt(e){return e.Event==="MeetmeMute"}function $t(e){return e.Event==="MeetmeTalkRequest"}function Jt(e){return e.Event==="MeetmeTalking"}function zt(e){return e.Event==="MemoryLimit"}function Yt(e){return e.Event==="MessageWaiting"}function Kt(e){return e.Event==="MiniVoiceMail"}function Zt(e){return e.Event==="MixMonitorMute"}function jt(e){return e.Event==="MixMonitorStart"}function en(e){return e.Event==="MixMonitorStop"}function tn(e){return e.Event==="MonitorStart"}function nn(e){return e.Event==="MonitorStop"}function rn(e){return e.Event==="MusicOnHoldStart"}function on(e){return e.Event==="MusicOnHoldStop"}function sn(e){return e.Event==="NewAccountCode"}function un(e){return e.Event==="NewCallerid"}function an(e){return e.Event==="NewConnectedLine"}function cn(e){return e.Event==="NewExten"}function ln(e){return e.Event==="Newchannel"}function vn(e){return e.Event==="Newstate"}function En(e){return e.Event==="OriginateResponse"}function An(e){return e.Event==="ParkedCall"}function mn(e){return e.Event==="ParkedCallGiveUp"}function dn(e){return e.Event==="ParkedCallSwap"}function pn(e){return e.Event==="ParkedCallTimeOut"}function In(e){return e.Event==="PeerStatus"}function fn(e){return e.Event==="Pickup"}function gn(e){return e.Event==="PresenceStateChange"}function Cn(e){return e.Event==="PresenceStateListComplete"}function Mn(e){return e.Event==="PresenceStatus"}function hn(e){return e.Event==="QueueSummary"}function _n(e){return e.Event==="QueueSummaryComplete"}function Sn(e){return e.Event==="QueueMember"}function Rn(e){return e.Event==="QueueCallerAbandon"}function Ln(e){return e.Event==="QueueCallerJoin"}function xn(e){return e.Event==="QueueCallerLeave"}function bn(e){return e.Event==="QueueEntry"}function Tn(e){return e.Event==="QueueMemberAdded"}function Dn(e){return e.Event==="QueueMemberPause"}function wn(e){return e.Event==="QueueMemberPenalty"}function yn(e){return e.Event==="QueueMemberRemoved"}function Nn(e){return e.Event==="QueueMemberRinginuse"}function Pn(e){return e.Event==="QueueMemberStatus"}function On(e){return e.Event==="QueueParams"}function Qn(e){return e.Event==="RTCPReceived"}function Bn(e){return e.Event==="RTCPSent"}function Hn(e){return e.Event==="ReceiveFAX"}function kn(e){return e.Event==="Registry"}function Gn(e){return e.Event==="Reload"}function Fn(e){return e.Event==="Rename"}function Un(e){return e.Event==="RequestBadFormat"}function qn(e){return e.Event==="RequestNotAllowed"}function Vn(e){return e.Event==="RequestNotSupported"}function Xn(e){return e.Event==="SIPQualifyPeerDone"}function Wn(e){return e.Event==="SendFAX"}function $n(e){return e.Event==="SessionLimit"}function Jn(e){return e.Event==="SessionTimeout"}function zn(e){return e.Event==="Shutdown"}function Yn(e){return e.Event==="SoftHangupRequest"}function Kn(e){return e.Event==="SpanAlarm"}function Zn(e){return e.Event==="SpanAlarmClear"}function jn(e){return e.Event==="Status"}function ei(e){return e.Event==="StatusComplete"}function ti(e){return e.Event==="SuccessfulAuth"}function ni(e){return e.Event==="TransportDetail"}function ii(e){return e.Event==="UnParkedCall"}function ri(e){return e.Event==="UnexpectedAddress"}function oi(e){return e.Event==="Unhold"}function si(e){return e.Event==="Unload"}function ui(e){return e.Event==="UserEvent"}function ai(e){return e.Event==="VarSet"}function ci(e){return e.Event==="VoicemailPasswordChange"}function li(e){return e.Event==="Wink"}var E=y,l=L,R=class{debug;_host;_port;_userName;_password;_isLoggedIn;_emitAllEvents;_reconnect;_heartbeatOk=!1;_lastConnectedTime=0;_maxReconnectCount;_heartbeatInterval;_heartbeatHandler=void 0;_resendTimeOut;_successBitsByInterval;_errorBitsByInterval;_countReconnect;_excludeEvents;_queueRequest;_socketHandler=void 0;_actions;events;_maxAuthCount;_authCount;constructor(t){let o=t,n=v(o.additionalOptions)?{}:o.additionalOptions;this._host=o.host,this._port=d(o.port)?x:o.port,this._userName=o.userName,this._password=o.password,this._reconnect=n?.reconnect??!0,this._heartbeatInterval=(n?.heartbeatInterval??D)*1e3,this._resendTimeOut=(n?.resendTimeOut??T)*1e3,this._excludeEvents=n?.excludeEvents??[],this._emitAllEvents=n?.emitAllEvents??!1,this.debug=n?.debug??!1,this._maxReconnectCount=n?.maxReconnectCount??w,this._countReconnect=0,this._maxAuthCount=5,this._authCount=0,this._successBitsByInterval=0,this._errorBitsByInterval=0,this.events=new O.EventEmitter,this._queueRequest=[],this._isLoggedIn=!1,this._actions=new C(this),this.internalListeners()}internalListeners(){this.events.on(E.RE_LOGIN,()=>{this._authCount<this._maxAuthCount&&setTimeout(async()=>{this._authCount++;try{await this.login()}catch(t){this.debug&&console.log("re-login",t)}},1e3)})}get excludeEvents(){return this._excludeEvents}set excludeEvents(t){this._excludeEvents=t}get isLoggedIn(){return this._isLoggedIn}get lastConnectTime(){return this._lastConnectedTime}get actions(){return this._actions}get queueRequest(){return this._queueRequest}addSocketListeners(){this._socketHandler?this._socketHandler.on("close",()=>{this.debug&&console.log("close AMI connect"),this.events.emit(E.CLOSE)}).on("end",()=>{this.debug&&console.log("end AMI connect"),this.events.emit(E.CLOSE)}).on("data",t=>this.getData(t)):this.debug&&console.log("Socket handler is undefined, cannot add listeners.")}destroySocket(){this._socketHandler?(this._socketHandler.destroy(),this.debug&&console.log(`${m}Socket connection destroyed`)):this.debug&&console.log("Socket handler is undefined, cannot destroy socket.")}addRequest(t){this.queueRequest.push(t),this.events.emit(E.SEND,t)}removeRequest(t){if(v(t))return!1;let o=S(this.queueRequest,t);if(o<0)return!1;try{return this.queueRequest.splice(o,1),!0}catch(n){return this.debug&&console.log("Error remove request",n),!1}}getRequest(t){if(v(t))return null;let o=p(t),n=o!==void 0&&Number.isFinite(o)?o:t,i=S(this.queueRequest,n);return i<0?null:this.queueRequest[i]}setRequest(t,o){let n=this.getRequest(t);n&&(n=o)}keepConnection(){clearInterval(this._heartbeatHandler);let t=async()=>{try{await this.actions.Ping()?(this._heartbeatOk=!0,this._successBitsByInterval++):this._errorBitsByInterval++,this._heartbeatHandler=setTimeout(()=>t(),this._heartbeatInterval)}catch(o){this._errorBitsByInterval++,this.debug&&console.log("keep connect error",o),this._heartbeatHandler=setTimeout(()=>t(),this._heartbeatInterval)}};t().catch(o=>{this.debug&&console.log("Initial ping error",o)})}login(){return new Promise((t,o)=>{(async()=>{try{let n={Username:this._userName,Secret:this._password};this.events.emit(E.DO_LOGIN,n),await this.actions.Login(n),this.events.emit(E.LOGGED_IN),t(!0)}catch(n){if(this.events.emit(E.ERROR_LOGIN,n,"Authorization failed..."),this._authCount<this._maxAuthCount)setTimeout(()=>{this._authCount++,this.events.emit(E.RE_LOGIN,this._authCount)},1e3);else{this.events.emit(E.MAX_AUTH_REACH,this._authCount);try{await this.reconnect()}catch(i){o(i)}}}})()})}logout(){return new Promise((t,o)=>{(async()=>{try{await this.actions.Logout(),t(!0)}catch(n){this.events.emit(E.ERROR_LOGOUT,n),o("Failed to logout")}})()})}showSendPackages(){setInterval(()=>{console.log("Keep Connection. success sent - %s, error sent - %s",this._successBitsByInterval,this._errorBitsByInterval)},5e3)}connect(){return new Promise((t,o)=>{this._socketHandler=new Q.Socket,this._socketHandler.connect(this._port,this._host),this._socketHandler.on("connect",async()=>{this.addSocketListeners();try{this.debug&&console.log("Connected to the server"),await this.login(),this._isLoggedIn=!0,this._lastConnectedTime=new Date().getTime(),this.debug&&this.showSendPackages(),await this.keepConnection(),this.events.emit(E.CONNECT),t(this)}catch(n){this.debug&&console.log("Connection error:",n),o(n)}}).on("error",n=>{this.events.emit(E.ERROR_CONNECT,n,"Error connecting to an Asterisk server"),this.debug&&console.log("Error connecting to the Asterisk server",n),o(!1)}).on("close",()=>{this.debug&&console.log("Connection closed"),this._isLoggedIn=!1})})}reconnect(){if(!this._reconnect)return Promise.resolve(!0);if(this._countReconnect<this._maxReconnectCount)this._countReconnect++;else return this.events.emit(E.MAX_RECONNECT_REACH,this._countReconnect),Promise.resolve(!1);return new Promise((t,o)=>{(async()=>{try{this.events.emit(E.DO_RECONNECT),await this.logout(),this.destroySocket(),await this.connect(),this.events.emit(E.RECONNECTED),t(!0)}catch(n){this.events.emit(E.ERROR_RECONNECT,n,"Could not connect to Asterisk..."),o("Could not connect to Asterisk...")}})()})}action(t){return new Promise((o,n)=>{let i=!1,s="";for(let A in t)A!=="ActionID"&&(s+=`${A}: ${t[A]}${m}`);v(t.ActionID)&&(t.ActionID=new Date().getTime());let r=t.ActionID;s+=`ActionID: ${r}${m}${m}`;let c=this.getRequest(r);c!=null?this.events.once(`Action_${r}`,A=>{c.Completed=!0,this.debug&&console.log("response",c.ActionID,c.Action),o(A)}):this.events.once(`Action_${r}`,A=>{o(A)});let a=p(r);if(a!==void 0&&!f(a)&&this.events.once(String(r),A=>{c!=null&&(c.Completed=!0),o(A)}),this.addRequest(t),c){let A=p(t.ActionID);typeof A=="number"&&f(A)?c.ActionID=A:typeof t.ActionID=="string"||typeof t.ActionID=="number"?c.ActionID=t.ActionID:c.ActionID=void 0,c.Completed=!0,c.timeOutHandler=setTimeout(async()=>{if(!i){n("Timeout write to socket...");return}if(c.Completed===!0){try{await this.action(t)}catch(I){this.debug&&console.log("Error resend action",c.Action,I),n(`Error resend action${c.Action}${I}`)}this._errorBitsByInterval++,this.debug&&console.log(`resend ActionID_${r}`,c.Action);return}clearTimeout(c.timeOutHandler),this.removeRequest(r),this.events.removeAllListeners(String(r)),this.events.removeAllListeners(`Action_${r}`),this.debug&&console.log(`complete ${r}`,c.Action)},3e3)}this._socketHandler?.write(s,()=>{i=!0})===!1&&(this.debug&&console.log("Data in the sending queue"),n("Data in the sending queue"))})}getData(t){let o=t.toString(),n,i="",s=[],r=[],c="",a=null,u={};for(o.startsWith("Asterisk Call Manager")&&(o=o.substring(o.indexOf(m)+2));n=o.indexOf(b),!(n<0);){s=o.substring(0,n+2).split(m),o=o.substring(n+4),u={},i="",r=[];for(let g=0;g<s.length;g++){if(s[g].indexOf(": ")<0)continue;if(r=s[g].split(": ",2),c=r[0].replace("'",""),a=r[1],i=g===0?c.toLowerCase():i,c==="ActionID"){let h=p(a);u[c]=h!==void 0&&f(h)?h:a;continue}let M=p(a);M!==void 0&&f(M)?a=M:(a&&a.indexOf("unknown")>=0||N(a)||a&&a.toLowerCase().indexOf("s")===0&&a.length===1)&&(a=null),u[c]=a??void 0}u.TimeEvent=Date.now();let A=this.getRequest(u.ActionID);u.Request=A!==null?A:void 0;let I=p(u.ActionID);switch(I!==void 0&&f(I)?this.events.emit(`Action_${I}`,u):typeof u.ActionID=="string"&&this.events.emit(u.ActionID,u),i){case"response":this.debug&&console.log(E.RESPONSE,m,u,m),this.events.emit(E.RESPONSE,u);break;case"event":this.debug&&console.log(E.EVENTS,m,u,m),u.Event!==void 0&&u.Event!==null&&u.Event!==""&&this.excludeEvents.indexOf(u.Event)<0&&(this._emitAllEvents&&this.events.emit(E.EVENTS,u),this.events.emit(u.Event,u));break;default:break}}return u}};0&&(module.exports={AMI_EVENTS,eAMI_EVENTS,eAmi,isAGIExecEnd,isAGIExecStart,isAOCD,isAOCE,isAOCS,isAgentCalled,isAgentComplete,isAgentConnect,isAgentDump,isAgentLogin,isAgentLogoff,isAgentRingNoAnswer,isAgents,isAgentsComplete,isAlarm,isAlarmClear,isAorDetail,isAorList,isAorListComplete,isAsyncAGIEnd,isAsyncAGIExec,isAsyncAGIStart,isAttendedTransfer,isAuthDetail,isAuthList,isAuthListComplete,isAuthMethodNotAllowed,isBlindTransfer,isBridgeCreate,isBridgeDestroy,isBridgeEnter,isBridgeInfoChannel,isBridgeInfoComplete,isBridgeLeave,isBridgeMerge,isBridgeVideoSourceUpdate,isCEL,isCdr,isChallengeResponseFailed,isChallengeSent,isChanSpyStart,isChanSpyStop,isChannelTalkingStart,isChannelTalkingStop,isConfbridgeEnd,isConfbridgeJoin,isConfbridgeLeave,isConfbridgeList,isConfbridgeListRooms,isConfbridgeMute,isConfbridgeRecord,isConfbridgeStart,isConfbridgeStopRecord,isConfbridgeTalking,isConfbridgeUnmute,isContactList,isContactListComplete,isContactStatus,isContactStatusDetail,isCoreShowChannel,isCoreShowChannelMapComplete,isCoreShowChannelsComplete,isDAHDIChannel,isDNDState,isDTMFBegin,isDTMFEnd,isDeadlockStart,isDeviceStateChange,isDeviceStateListComplete,isDialBegin,isDialEnd,isDialState,isEndpointDetail,isEndpointDetailComplete,isEndpointList,isEndpointListComplete,isExtensionStateListComplete,isExtensionStatus,isFAXSession,isFAXSessionsComplete,isFAXSessionsEntry,isFAXStats,isFAXStatus,isFailedACL,isFlash,isFullyBooted,isHangup,isHangupHandlerPop,isHangupHandlerPush,isHangupHandlerRun,isHangupRequest,isHold,isIdentifyDetail,isInvalidAccountID,isInvalidPassword,isInvalidTransport,isLoad,isLoadAverageLimit,isLocalBridge,isLocalOptimizationBegin,isLocalOptimizationEnd,isLogChannel,isMCID,isMWIGet,isMWIGetComplete,isMeetmeEnd,isMeetmeJoin,isMeetmeLeave,isMeetmeList,isMeetmeListRooms,isMeetmeMute,isMeetmeTalkRequest,isMeetmeTalking,isMemoryLimit,isMessageWaiting,isMiniVoiceMail,isMixMonitorMute,isMixMonitorStart,isMixMonitorStop,isMonitorStart,isMonitorStop,isMusicOnHoldStart,isMusicOnHoldStop,isNewAccountCode,isNewCallerid,isNewConnectedLine,isNewExten,isNewchannel,isNewstate,isOriginateResponse,isParkedCall,isParkedCallGiveUp,isParkedCallSwap,isParkedCallTimeOut,isPeerStatus,isPickup,isPresenceStateChange,isPresenceStateListComplete,isPresenceStatus,isQueueCallerAbandon,isQueueCallerJoin,isQueueCallerLeave,isQueueEntry,isQueueMember,isQueueMemberAdded,isQueueMemberPause,isQueueMemberPenalty,isQueueMemberRemoved,isQueueMemberRinginuse,isQueueMemberStatus,isQueueParams,isQueueSummary,isQueueSummaryComplete,isRTCPReceived,isRTCPSent,isReceiveFAX,isRegistry,isReload,isRename,isRequestBadFormat,isRequestNotAllowed,isRequestNotSupported,isSIPQualifyPeerDone,isSendFAX,isSessionLimit,isSessionTimeout,isShutdown,isSoftHangupRequest,isSpanAlarm,isSpanAlarmClear,isStatus,isStatusComplete,isSuccessfulAuth,isTransportDetail,isUnParkedCall,isUnexpectedAddress,isUnhold,isUnload,isUserEvent,isVarSet,isVoicemailPasswordChange,isWink});
//# sourceMappingURL=index.cjs.map
