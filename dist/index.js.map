{
  "version": 3,
  "sources": ["../src/index.ts", "../src/constants.ts", "../src/functions.ts", "../src/e-ami-actions.ts", "../src/typeGuards.ts"],
  "sourcesContent": ["import { EventEmitter } from \"node:events\";\nimport { Socket } from \"node:net\";\nimport {\n\tCRLF,\n\tDEFAULT_PORT,\n\tEND,\n\tHEARTBEAT_INTERVAL,\n\tMAX_RECONNECT_COUNT,\n\tRESEND_TIMEOUT,\n\t_AMI_EVENTS,\n\t_eAMI_EVENTS,\n} from \"./constants.js\";\nimport { eAmiActions } from \"./e-ami-actions.js\";\nimport {\n\t_indexOfArray,\n\t_isEmpty,\n\t_isFinite,\n\t_isNull,\n\t_isUndefined,\n\t_toNumber,\n} from \"./functions.js\";\nimport type {\n\tI_ActionLogin,\n\tI_Request,\n\tI_Response,\n} from \"./interfaces/actions.interface.js\";\nimport type { IeAmiOptions } from \"./interfaces/configure.interface.js\";\ntype Timer = ReturnType<typeof setTimeout>;\n\nexport * from \"./typeGuards.js\";\nexport * from \"./types/events.js\";\n\nexport const eAMI_EVENTS = _eAMI_EVENTS;\nexport const AMI_EVENTS = _AMI_EVENTS;\n\nexport class eAmi {\n\tpublic debug: boolean;\n\n\tprivate _host: string;\n\tprivate _port: number;\n\tprivate _userName: string;\n\tprivate _password: string;\n\n\tprivate _isLoggedIn: boolean;\n\tprivate _emitAllEvents: boolean;\n\tprivate _reconnect: boolean;\n\tprivate _heartbeatOk = false;\n\n\tprivate _lastConnectedTime = 0;\n\tprivate _maxReconnectCount: number;\n\tprivate _heartbeatInterval: number;\n\tprivate _heartbeatHandler?: Timer = undefined; // ou Timer | null = null;\n\n\tprivate _resendTimeOut: number;\n\tprivate _successBitsByInterval: number;\n\tprivate _errorBitsByInterval: number;\n\n\tprivate _countReconnect: number;\n\n\tprivate _excludeEvents: string[];\n\n\tprivate _queueRequest: I_Request[];\n\tpublic _socketHandler?: Socket = undefined;\n\tprivate _actions: eAmiActions;\n\tpublic events: EventEmitter;\n\n\tprivate _maxAuthCount: number;\n\tprivate _authCount: number;\n\n\tconstructor(allOptions: IeAmiOptions) {\n\t\tconst connect = allOptions;\n\t\tconst options = _isUndefined(connect.additionalOptions)\n\t\t\t? {}\n\t\t\t: connect.additionalOptions;\n\n\t\tthis._host = connect.host;\n\t\tthis._port = _isNull(connect.port) ? DEFAULT_PORT : connect.port;\n\t\tthis._userName = connect.userName;\n\t\tthis._password = connect.password;\n\n\t\tthis._reconnect = options?.reconnect ?? true;\n\t\tthis._heartbeatInterval =\n\t\t\t(options?.heartbeatInterval ?? HEARTBEAT_INTERVAL) * 1000;\n\t\tthis._resendTimeOut = (options?.resendTimeOut ?? RESEND_TIMEOUT) * 1000;\n\t\tthis._excludeEvents = options?.excludeEvents ?? [];\n\t\tthis._emitAllEvents = options?.emitAllEvents ?? false;\n\t\tthis.debug = options?.debug ?? false;\n\t\tthis._maxReconnectCount = options?.maxReconnectCount ?? MAX_RECONNECT_COUNT;\n\n\t\tthis._countReconnect = 0;\n\t\tthis._maxAuthCount = 5;\n\t\tthis._authCount = 0;\n\t\tthis._successBitsByInterval = 0;\n\t\tthis._errorBitsByInterval = 0;\n\n\t\tthis.events = new EventEmitter();\n\n\t\tthis._queueRequest = [];\n\n\t\tthis._isLoggedIn = false;\n\n\t\tthis._actions = new eAmiActions(this);\n\n\t\tthis.internalListeners();\n\t}\n\n\tprivate internalListeners() {\n\t\tthis.events.on(eAMI_EVENTS.RE_LOGIN, () => {\n\t\t\tif (this._authCount < this._maxAuthCount) {\n\t\t\t\tsetTimeout(async () => {\n\t\t\t\t\tthis._authCount++;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait this.login();\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tif (this.debug) console.log(\"re-login\", error);\n\t\t\t\t\t}\n\t\t\t\t}, 1000);\n\t\t\t}\n\t\t});\n\t}\n\n\tget excludeEvents(): string[] {\n\t\treturn this._excludeEvents;\n\t}\n\n\tset excludeEvents(events: string[]) {\n\t\tthis._excludeEvents = events;\n\t}\n\n\tget isLoggedIn(): boolean {\n\t\treturn this._isLoggedIn;\n\t}\n\n\tget lastConnectTime(): number {\n\t\treturn this._lastConnectedTime;\n\t}\n\n\tget actions(): eAmiActions {\n\t\treturn this._actions;\n\t}\n\n\tget queueRequest(): I_Request[] {\n\t\treturn this._queueRequest;\n\t}\n\n\tprivate addSocketListeners(): void {\n\t\tif (this._socketHandler) {\n\t\t\tthis._socketHandler\n\t\t\t\t.on(\"close\", () => {\n\t\t\t\t\tif (this.debug) console.log(\"close AMI connect\");\n\t\t\t\t})\n\t\t\t\t.on(\"end\", () => {\n\t\t\t\t\tif (this.debug) console.log(\"end AMI connect\");\n\t\t\t\t})\n\t\t\t\t.on(\"data\", (buffer: Buffer) => this.getData(buffer));\n\t\t} else {\n\t\t\tif (this.debug)\n\t\t\t\tconsole.log(\"Socket handler is undefined, cannot add listeners.\");\n\t\t}\n\t}\n\n\tpublic destroySocket(): void {\n\t\tif (this._socketHandler) {\n\t\t\tthis._socketHandler.destroy();\n\t\t\tif (this.debug) console.log(`${CRLF}Socket connection destroyed`);\n\t\t} else {\n\t\t\tif (this.debug)\n\t\t\t\tconsole.log(\"Socket handler is undefined, cannot destroy socket.\");\n\t\t}\n\t}\n\n\tprivate addRequest(request: I_Request): void {\n\t\tthis.queueRequest.push(request);\n\t\tthis.events.emit(eAMI_EVENTS.SEND, request);\n\t}\n\n\tprivate removeRequest(actionID: unknown): boolean {\n\t\tif (_isUndefined(actionID)) return false;\n\n\t\tconst index: number = _indexOfArray(this.queueRequest, actionID);\n\n\t\tif (index < 0) return false;\n\t\ttry {\n\t\t\tthis.queueRequest.splice(index, 1);\n\t\t\treturn true;\n\t\t} catch (error) {\n\t\t\tif (this.debug) console.log(\"Error remove request\", error);\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tpublic getRequest(actionID: unknown): I_Request | null {\n\t\tif (_isUndefined(actionID)) return null;\n\n\t\tconst numActionID = _toNumber(actionID);\n\t\tconst searchID =\n\t\t\tnumActionID !== undefined && Number.isFinite(numActionID)\n\t\t\t\t? numActionID\n\t\t\t\t: actionID;\n\n\t\tconst index: number = _indexOfArray(this.queueRequest, searchID);\n\n\t\tif (index < 0) return null;\n\n\t\treturn this.queueRequest[index];\n\t}\n\n\tprivate setRequest(actionID: unknown, newRequest: I_Request): void {\n\t\tlet request = this.getRequest(actionID);\n\n\t\tif (!request) return;\n\n\t\trequest = newRequest;\n\t}\n\n\tprivate keepConnection(): Promise<boolean> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\t(async () => {\n\t\t\t\tclearInterval(this._heartbeatHandler as Timer);\n\n\t\t\t\ttry {\n\t\t\t\t\tconst response: boolean = await this.actions.Ping();\n\n\t\t\t\t\tif (response) {\n\t\t\t\t\t\tthis._heartbeatOk = true;\n\t\t\t\t\t\tresolve(true);\n\t\t\t\t\t\tthis._successBitsByInterval++;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._heartbeatHandler = setTimeout(async () => {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tawait this.keepConnection();\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tconsole.log(\"keep timeout error\", error);\n\t\t\t\t\t\t\tthis._errorBitsByInterval++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this._heartbeatInterval);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis._errorBitsByInterval++;\n\t\t\t\t\tconsole.log(\"keep connect error\", error);\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\t\t\t})();\n\t\t});\n\t}\n\n\tprivate login(): Promise<boolean> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\t(async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst loginOptions: I_ActionLogin = {\n\t\t\t\t\t\tUsername: this._userName,\n\t\t\t\t\t\tSecret: this._password,\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.events.emit(eAMI_EVENTS.DO_LOGIN, loginOptions);\n\n\t\t\t\t\tawait this.actions.Login(loginOptions);\n\n\t\t\t\t\tthis.events.emit(eAMI_EVENTS.LOGGED_IN);\n\n\t\t\t\t\tresolve(true);\n\t\t\t\t} catch (error0) {\n\t\t\t\t\tthis.events.emit(\n\t\t\t\t\t\teAMI_EVENTS.ERROR_LOGIN,\n\t\t\t\t\t\terror0,\n\t\t\t\t\t\t\"Authorization failed...\",\n\t\t\t\t\t);\n\n\t\t\t\t\tif (this._authCount < this._maxAuthCount) {\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tthis._authCount++;\n\t\t\t\t\t\t\tthis.events.emit(eAMI_EVENTS.RE_LOGIN, this._authCount);\n\t\t\t\t\t\t}, 1000);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.events.emit(eAMI_EVENTS.MAX_AUTH_REACH, this._authCount);\n\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tawait this.reconnect();\n\t\t\t\t\t\t} catch (error1) {\n\t\t\t\t\t\t\treject(error1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})();\n\t\t});\n\t}\n\n\tprivate logout(): Promise<boolean> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\t(async () => {\n\t\t\t\ttry {\n\t\t\t\t\tawait this.actions.Logout();\n\n\t\t\t\t\tresolve(true);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.events.emit(eAMI_EVENTS.ERROR_LOGOUT, error);\n\t\t\t\t\treject(\"Failed to logout\");\n\t\t\t\t}\n\t\t\t})();\n\t\t});\n\t}\n\n\tprivate showSendPackages(): void {\n\t\tsetInterval(() => {\n\t\t\tconsole.log(\n\t\t\t\t\"Keep Connection. success sent - %s, error sent - %s\",\n\t\t\t\tthis._successBitsByInterval,\n\t\t\t\tthis._errorBitsByInterval,\n\t\t\t);\n\t\t}, 5000);\n\t}\n\n\tpublic connect(): Promise<this | boolean> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis._socketHandler = new Socket();\n\t\t\tthis._socketHandler.connect(this._port, this._host);\n\n\t\t\tthis._socketHandler\n\t\t\t\t.on(\"connect\", async () => {\n\t\t\t\t\tthis.addSocketListeners();\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (this.debug) console.log(\"connection to the server\");\n\t\t\t\t\t\tawait this.login();\n\n\t\t\t\t\t\tthis._isLoggedIn = true;\n\t\t\t\t\t\tthis._lastConnectedTime = new Date().getTime();\n\n\t\t\t\t\t\tif (this.debug) this.showSendPackages();\n\t\t\t\t\t\tawait this.keepConnection();\n\n\t\t\t\t\t\tthis.events.emit(eAMI_EVENTS.CONNECT);\n\n\t\t\t\t\t\tresolve(this);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tif (this.debug) console.log(error);\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.on(\"error\", (error) => {\n\t\t\t\t\tthis.events.emit(\n\t\t\t\t\t\teAMI_EVENTS.ERROR_CONNECT,\n\t\t\t\t\t\terror,\n\t\t\t\t\t\t\"Error connecting to an asterisk server\",\n\t\t\t\t\t);\n\t\t\t\t\tif (this.debug)\n\t\t\t\t\t\tconsole.log(\"Error connecting to an asterisk server\", error);\n\t\t\t\t\treject(false);\n\t\t\t\t});\n\t\t});\n\t}\n\n\tpublic reconnect(): Promise<boolean> {\n\t\tif (!this._reconnect) return Promise.resolve(true);\n\t\tif (this._countReconnect < this._maxReconnectCount) this._countReconnect++;\n\t\telse {\n\t\t\tthis.events.emit(eAMI_EVENTS.MAX_RECONNECT_REACH, this._countReconnect);\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\t(async () => {\n\t\t\t\ttry {\n\t\t\t\t\tthis.events.emit(eAMI_EVENTS.DO_RECONNECT);\n\n\t\t\t\t\tawait this.logout();\n\t\t\t\t\tthis.destroySocket();\n\t\t\t\t\tawait this.connect();\n\n\t\t\t\t\tthis.events.emit(eAMI_EVENTS.RECONNECTED);\n\t\t\t\t\tresolve(true);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.events.emit(\n\t\t\t\t\t\teAMI_EVENTS.ERROR_RECONNECT,\n\t\t\t\t\t\terror,\n\t\t\t\t\t\t\"Could not connect to Asterisk...\",\n\t\t\t\t\t);\n\t\t\t\t\treject(\"Could not connect to Asterisk...\");\n\t\t\t\t}\n\t\t\t})();\n\t\t});\n\t}\n\n\tpublic action<T extends I_Request, R>(request: T): Promise<R> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet writed = false;\n\t\t\tlet message = \"\";\n\n\t\t\tfor (const key in request) {\n\t\t\t\tif (key === \"ActionID\") continue;\n\t\t\t\tmessage += `${key}: ${request[key]}${CRLF}`;\n\t\t\t}\n\n\t\t\tif (_isUndefined(request.ActionID))\n\t\t\t\trequest.ActionID = new Date().getTime();\n\t\t\tconst actionID = request.ActionID;\n\n\t\t\tmessage += `ActionID: ${actionID}${CRLF}${CRLF}`;\n\n\t\t\tconst _request = this.getRequest(actionID);\n\n\t\t\t// handlers for resolve\n\t\t\tif (_request !== null && _request !== undefined) {\n\t\t\t\tthis.events.once(`Action_${actionID}`, (response: R) => {\n\t\t\t\t\t_request.Completed = true;\n\n\t\t\t\t\tif (this.debug)\n\t\t\t\t\t\tconsole.log(\"response\", _request.ActionID, _request.Action);\n\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.events.once(`Action_${actionID}`, (response: R) => {\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst numActionID = _toNumber(actionID);\n\t\t\tif (numActionID !== undefined && !_isFinite(numActionID)) {\n\t\t\t\tthis.events.once(String(actionID), (response: R) => {\n\t\t\t\t\tif (_request !== null && _request !== undefined) {\n\t\t\t\t\t\t_request.Completed = true;\n\t\t\t\t\t}\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.addRequest(request);\n\n\t\t\tif (_request) {\n\t\t\t\tconst actionIDNumber = _toNumber(request.ActionID);\n\n\t\t\t\tif (typeof actionIDNumber === \"number\" && _isFinite(actionIDNumber)) {\n\t\t\t\t\t_request.ActionID = actionIDNumber;\n\t\t\t\t} else if (\n\t\t\t\t\ttypeof request.ActionID === \"string\" ||\n\t\t\t\t\ttypeof request.ActionID === \"number\"\n\t\t\t\t) {\n\t\t\t\t\t_request.ActionID = request.ActionID;\n\t\t\t\t} else {\n\t\t\t\t\t_request.ActionID = undefined;\n\t\t\t\t}\n\n\t\t\t\t_request.Completed = true;\n\t\t\t\t_request.timeOutHandler = setTimeout(async () => {\n\t\t\t\t\tif (!writed) {\n\t\t\t\t\t\treject(\"Timeout write to socket...\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (_request.Completed === true) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tawait this.action(request);\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tif (this.debug)\n\t\t\t\t\t\t\t\tconsole.log(\"Error resend action\", _request.Action, error);\n\t\t\t\t\t\t\treject(`Error resend action${_request.Action}${error}`);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._errorBitsByInterval++;\n\t\t\t\t\t\tif (this.debug)\n\t\t\t\t\t\t\tconsole.log(`resend ActionID_${actionID}`, _request.Action);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tclearTimeout(_request.timeOutHandler as Timer);\n\t\t\t\t\tthis.removeRequest(actionID);\n\t\t\t\t\tthis.events.removeAllListeners(String(actionID));\n\t\t\t\t\tthis.events.removeAllListeners(`Action_${actionID}`);\n\t\t\t\t\tif (this.debug) console.log(`complete ${actionID}`, _request.Action);\n\t\t\t\t}, 3000);\n\t\t\t}\n\n\t\t\tconst write = this._socketHandler?.write(message, () => {\n\t\t\t\twrited = true;\n\t\t\t});\n\n\t\t\tif (write === false) {\n\t\t\t\tif (this.debug) console.log(\"Data in the sending queue\");\n\t\t\t\treject(\"Data in the sending queue\");\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate getData(buffer: Buffer): I_Response {\n\t\tlet dataStr: string = buffer.toString();\n\t\tlet iDelim: number;\n\t\tlet typeResponse = \"\";\n\t\tlet dataArray: string[] = [];\n\t\tlet keyValueArray: string[] = [];\n\t\tlet key = \"\";\n\t\tlet value: string | number | null = null;\n\t\tlet dataObject: I_Response = {};\n\n\t\tif (dataStr.startsWith(\"Asterisk Call Manager\")) {\n\t\t\tdataStr = dataStr.substring(dataStr.indexOf(CRLF) + 2);\n\t\t}\n\n\t\twhile (true) {\n\t\t\tiDelim = dataStr.indexOf(END);\n\t\t\tif (iDelim < 0) break;\n\n\t\t\tdataArray = dataStr.substring(0, iDelim + 2).split(CRLF);\n\t\t\tdataStr = dataStr.substring(iDelim + 4);\n\t\t\tdataObject = {};\n\t\t\ttypeResponse = \"\";\n\t\t\tkeyValueArray = [];\n\n\t\t\tfor (let index = 0; index < dataArray.length; index++) {\n\t\t\t\tif (dataArray[index].indexOf(\": \") < 0) continue;\n\n\t\t\t\tkeyValueArray = dataArray[index].split(\": \", 2);\n\t\t\t\tkey = keyValueArray[0].replace(\"'\", \"\");\n\t\t\t\tvalue = keyValueArray[1];\n\t\t\t\ttypeResponse = index === 0 ? key.toLowerCase() : typeResponse;\n\n\t\t\t\tif (key === \"ActionID\") {\n\t\t\t\t\tconst actionIDNumber = _toNumber(value);\n\t\t\t\t\tdataObject[key] =\n\t\t\t\t\t\tactionIDNumber !== undefined && _isFinite(actionIDNumber)\n\t\t\t\t\t\t\t? actionIDNumber\n\t\t\t\t\t\t\t: value;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst valueNumber = _toNumber(value);\n\t\t\t\tif (valueNumber !== undefined && _isFinite(valueNumber)) {\n\t\t\t\t\tvalue = valueNumber;\n\t\t\t\t} else if (value && value.indexOf(\"unknown\") >= 0) {\n\t\t\t\t\tvalue = null;\n\t\t\t\t} else if (_isEmpty(value)) {\n\t\t\t\t\tvalue = null;\n\t\t\t\t} else if (\n\t\t\t\t\tvalue &&\n\t\t\t\t\tvalue.toLowerCase().indexOf(\"s\") === 0 &&\n\t\t\t\t\tvalue.length === 1\n\t\t\t\t) {\n\t\t\t\t\tvalue = null;\n\t\t\t\t}\n\n\t\t\t\tdataObject[key] = value ?? undefined;\n\t\t\t}\n\n\t\t\tconst request = this.getRequest(dataObject.ActionID);\n\t\t\tdataObject.Request = request !== null ? request : undefined;\n\n\t\t\tconst actionIDNumber = _toNumber(dataObject.ActionID);\n\t\t\tif (actionIDNumber !== undefined && _isFinite(actionIDNumber)) {\n\t\t\t\tthis.events.emit(`Action_${actionIDNumber}`, dataObject);\n\t\t\t} else if (typeof dataObject.ActionID === \"string\") {\n\t\t\t\tthis.events.emit(dataObject.ActionID, dataObject);\n\t\t\t}\n\n\t\t\tswitch (typeResponse) {\n\t\t\t\tcase \"response\":\n\t\t\t\t\tif (this.debug)\n\t\t\t\t\t\tconsole.log(eAMI_EVENTS.RESPONSE, CRLF, dataObject, CRLF);\n\t\t\t\t\tthis.events.emit(eAMI_EVENTS.RESPONSE, dataObject);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"event\":\n\t\t\t\t\tif (this.debug)\n\t\t\t\t\t\tconsole.log(eAMI_EVENTS.EVENTS, CRLF, dataObject, CRLF);\n\t\t\t\t\tif (\n\t\t\t\t\t\tdataObject.Event !== undefined &&\n\t\t\t\t\t\tdataObject.Event !== null &&\n\t\t\t\t\t\tdataObject.Event !== \"\" &&\n\t\t\t\t\t\tthis.excludeEvents.indexOf(dataObject.Event) < 0\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (this._emitAllEvents) {\n\t\t\t\t\t\t\tthis.events.emit(eAMI_EVENTS.EVENTS, dataObject);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.events.emit(dataObject.Event, dataObject);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn dataObject;\n\t}\n}\n", "export const _AMI_EVENTS = {\n\tBRIDGE_CREATE: \"BridgeCreate\",\n\tBRIDGE_DESTROY: \"BridgeDestroy\",\n\tBRIDGE_ENTER: \"BridgeEnter\",\n\tBRIDGE_INFO_CHANNEL: \"BridgeInfoChannel\",\n\tBRIDGE_INFO: \"BridgeInfoComplete\",\n\tBRIDGE_LEAVE: \"BridgeLeave\",\n\tBRIDGE_MERGE: \"BridgeMerge\",\n\tBRIDGE_LIST_ITEM: \"BridgeListItem\",\n\tBRIDGE_LIST_COMPLETE: \"BridgeListComplete\",\n\n\tCEL: \"CEL\",\n\n\tCORE_SHOW_CHANNEL: \"CoreShowChannel\",\n\tCORE_SHOW_CHANNEL_COMPLETE: \"CoreShowChannelsComplete\",\n\n\tDIAL1: \"DialBegin\",\n\tDIAL2: \"DialEnd\",\n\tDIAL_STATE: \"DialState\",\n\n\tDTMF1: \"DTMFBegin\",\n\tDTMF2: \"DTMFEnd\",\n\n\tHANGUP: \"Hangup\",\n\tHANGUP_REQUEST: \"HangupRequest\",\n\n\tHOLD: \"Hold\",\n\n\tNEW_CALLERID: \"NewCallerid\",\n\tNEW_CHANNEL: \"Newchannel\",\n\tNEW_CONNECTED_LINE: \"NewConnectedLine\",\n\tNEW_EXTEN: \"NewExten\",\n\tNEW_STATE: \"NewState\",\n\n\tORIGINATE_RESPONSE: \"OriginateResponse\",\n\n\tQ_SUMMARY: \"QueueSummary\",\n\tQ_PARAMS: \"QueueParams\",\n\tQ_MEMBER_ADDED: \"QueueMemberAdded\",\n\tQ_MEMBER_PAUSE: \"QueueMemberPause\",\n\tQ_MEMBER_REMOVED: \"QueueMemberRemoved\",\n\tQ_MEMBER_PENALTY: \"QueuePenalty\",\n\tQ_MEMBER_RING_IN_USE: \"QueueMemberRinginuse\",\n\tQ_MEMBER: \"QueueMember\",\n\tQ_MEMBER_STATUS: \"QueueMemberStatus\",\n\n\tRTCP_SENT: \"RTCPSent\",\n\tRTCP_RECEIVED: \"RTCPReceived\",\n\n\tSTATUS: \"Status\",\n};\n\n\nexport const DEFAULT_PORT: number = 5038;\nexport const CRLF: string = \"\\r\\n\";\nexport const END: string = \"\\r\\n\\r\\n\";\nexport const RESEND_TIMEOUT: number = 3;\nexport const HEARTBEAT_INTERVAL: number = 2;\nexport const MAX_RECONNECT_COUNT: number = 10;\n\nexport const _eAMI_EVENTS = {\n\tCONNECT: \"connect\",\n\tDO_RECONNECT: \"do_reconnect\",\n\tRECONNECTED: \"reconnected\",\n\tMAX_RECONNECT_REACH: \"max-reconnect-reach\",\n\tMAX_AUTH_REACH: \"max-auth-reach\",\n\n\tDO_LOGIN: \"login\",\n\tRE_LOGIN: \"re-login\",\n\tLOGGED_IN: \"loggedin\",\n\n\tSEND: \"send\",\n\tEVENTS: \"events\",\n\tRESPONSE: \"response\",\n\n\tERROR_CONNECT: \"error.connect\",\n\tERROR_LOGIN: \"error.login\",\n\tERROR_LOGOUT: \"error.logout\",\n\tERROR_RECONNECT: \"error.reconnect\",\n};\n\n", "export function _isUndefined(value: unknown): boolean {\n\treturn value === undefined;\n}\n\nexport function _isNull(value: unknown): boolean {\n\treturn value === null;\n}\n\nexport function _isEmpty(value: unknown): boolean {\n\tif (_isNull(value) || _isUndefined(value)) return true;\n\n\tif (typeof value === 'string' || Array.isArray(value)) {\n\t\treturn value.length === 0;\n\t}\n\n\tif (typeof value === 'object' && value !== null) {\n\t\treturn Object.keys(value).length === 0;\n\t}\n\n\treturn false;\n}\n\nexport function _isNaN(value: unknown): boolean {\n\treturn Number.isNaN(value as number);\n}\n\nexport function _isNumber(value: unknown): boolean {\n\treturn typeof value === 'number' && !Number.isNaN(value);\n}\n\nexport function _toNumber(value: unknown): number | undefined {\n\tif (_isNull(value) || _isUndefined(value) || _isNaN(value)) return undefined;\n\n\tconst parsedNumber = Number(value);\n\treturn _isNumber(parsedNumber) ? parsedNumber : undefined;\n}\n\nexport function _isFinite(value: number | null): boolean {\n\tif (value === null || _isUndefined(value) || _isNull(value) || _isNaN(value)) return false;\n\n\treturn Number.isFinite(value);\n}\n\nexport function _indexOfArray(array: unknown[], value: unknown): number {\n\tfor (let i = 0; i < array.length; i++) {\n\t\tconst item = array[i];\n\n\t\tif (typeof item === 'object' && item !== null) {\n\t\t\tfor (const key in item) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(item, key)) {\n\t\t\t\t\tif ((item as Record<string, unknown>)[key] === value) {\n\t\t\t\t\t\treturn i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn -1;\n}\n", "import { _isNull, _isUndefined } from \"./functions.js\";\nimport { AMI_EVENTS, type eAmi } from \"./index.js\";\nimport type {\n\tI_ActionBridgeInfo,\n\tI_ActionBridgeList,\n\tI_ActionCoreShowChannels,\n\tI_ActionHangup,\n\tI_ActionLogin,\n\tI_ActionLogout,\n\tI_ActionOriginate,\n\tI_ActionPing,\n\tI_ActionQueueAdd,\n\tI_ActionQueuePause,\n\tI_ActionQueuePenalty,\n\tI_ActionQueueRemove,\n\tI_ActionQueueStatus,\n\tI_ActionQueueSummary,\n\tI_ActionStatus,\n\tI_Response,\n} from \"./interfaces/actions.interface.js\";\nimport type {\n\tI_QueueMember,\n\tI_QueueMemberAdded,\n\tI_QueueMemberPause,\n\tI_QueueMemberPenalty,\n\tI_QueueMemberRemoved,\n\tI_QueueParams,\n\tI_QueueSummary,\n} from \"./interfaces/queue.js\";\nimport type { I_Status } from \"./interfaces/status.interface.js\";\n\nimport type {\n\tI_BridgeInfoChannel,\n\tI_BridgeListComplete,\n\tI_BridgeListItem,\n} from \"./interfaces/bridge.interface.js\";\nimport type {\n\tI_CoreShowChannel,\n\tI_CoreShowChannelsComplete,\n} from \"./interfaces/core-interface.js\";\nimport type {\n\tI_DualHangup,\n\tI_Hangup,\n\tI_HangupRequest,\n} from \"./interfaces/hangup.interface.js\";\n\nexport class eAmiActions {\n\tprivate eAmi: eAmi;\n\tprivate timeOutAction: number;\n\n\tconstructor(eAmi: eAmi) {\n\t\tthis.eAmi = eAmi;\n\t\tthis.timeOutAction = 5000;\n\t}\n\n\tpublic BridgeInfo(options: I_ActionBridgeInfo): Promise<I_BridgeInfoChannel> {\n\t\treturn new Promise<I_BridgeInfoChannel>((resolve, reject) => {\n\t\t\t(async () => {\n\t\t\t\toptions.Action = \"BridgeInfo\";\n\t\t\t\toptions.ActionID = new Date().getTime();\n\n\t\t\t\tconst removeListener = () => {\n\t\t\t\t\tthis.eAmi.events.removeListener(\n\t\t\t\t\t\tAMI_EVENTS.BRIDGE_INFO_CHANNEL,\n\t\t\t\t\t\tonBRIDGE_INFO_CHANNEL,\n\t\t\t\t\t);\n\t\t\t\t};\n\n\t\t\t\tconst onBRIDGE_INFO_CHANNEL = (response: I_BridgeInfoChannel) => {\n\t\t\t\t\tresolve(response);\n\t\t\t\t\tremoveListener();\n\t\t\t\t};\n\n\t\t\t\tthis.eAmi.events.once(\n\t\t\t\t\tAMI_EVENTS.BRIDGE_INFO_CHANNEL,\n\t\t\t\t\tonBRIDGE_INFO_CHANNEL,\n\t\t\t\t);\n\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\treject(`Timeout to '${options.Action}' action, try again later...`);\n\t\t\t\t}, this.timeOutAction);\n\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await this.eAmi.action<\n\t\t\t\t\t\tI_ActionBridgeInfo,\n\t\t\t\t\t\tI_Response\n\t\t\t\t\t>(options);\n\t\t\t\t\tif (response?.Response?.toLowerCase() === \"error\") {\n\t\t\t\t\t\treject(response);\n\t\t\t\t\t\tremoveListener();\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t\tremoveListener();\n\t\t\t\t}\n\t\t\t})();\n\t\t});\n\t}\n\n\tpublic BridgeList(options: I_ActionBridgeList): Promise<I_BridgeListItem[]> {\n\t\treturn new Promise<I_BridgeListItem[]>((resolve, reject) => {\n\t\t\t(async () => {\n\t\t\t\tif (_isUndefined(options)) reject(new Error(\"Options are undefined\"));\n\n\t\t\t\toptions.Action = \"BridgeList\";\n\t\t\t\toptions.ActionID = new Date().getTime();\n\n\t\t\t\tlet bridgeItemsCount = 0;\n\t\t\t\tconst bridgeItems: I_BridgeListItem[] = [];\n\n\t\t\t\tconst removeListener = () => {\n\t\t\t\t\tthis.eAmi.events.removeListener(\n\t\t\t\t\t\tAMI_EVENTS.BRIDGE_LIST_COMPLETE,\n\t\t\t\t\t\tonBRIDGE_LIST_COMPLETE,\n\t\t\t\t\t);\n\t\t\t\t\tthis.eAmi.events.removeListener(\n\t\t\t\t\t\tAMI_EVENTS.BRIDGE_LIST_ITEM,\n\t\t\t\t\t\tonBRIDGE_LIST_ITEM,\n\t\t\t\t\t);\n\t\t\t\t};\n\n\t\t\t\tconst onBRIDGE_LIST_ITEM = (response: I_BridgeListItem) => {\n\t\t\t\t\tbridgeItems.push(response);\n\n\t\t\t\t\tif (bridgeItemsCount === bridgeItems.length) {\n\t\t\t\t\t\tresolve(bridgeItems);\n\t\t\t\t\t\tremoveListener();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tconst onBRIDGE_LIST_COMPLETE = (response: I_BridgeListComplete) => {\n\t\t\t\t\tbridgeItemsCount = response.ListItems;\n\n\t\t\t\t\tif (bridgeItemsCount === bridgeItems.length) {\n\t\t\t\t\t\tresolve(bridgeItems);\n\t\t\t\t\t\tremoveListener();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.eAmi.events.once(\n\t\t\t\t\tAMI_EVENTS.BRIDGE_LIST_COMPLETE,\n\t\t\t\t\tonBRIDGE_LIST_COMPLETE,\n\t\t\t\t);\n\t\t\t\tthis.eAmi.events.on(AMI_EVENTS.BRIDGE_LIST_ITEM, onBRIDGE_LIST_ITEM);\n\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\treject(\n\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t`Timeout to '${options.Action}' action, try again later...`,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t}, this.timeOutAction);\n\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await this.eAmi.action<\n\t\t\t\t\t\tI_ActionBridgeList,\n\t\t\t\t\t\tI_Response\n\t\t\t\t\t>(options);\n\t\t\t\t\tif (response?.Response?.toLowerCase() === \"error\") {\n\t\t\t\t\t\treject(response);\n\t\t\t\t\t\tremoveListener();\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t\tremoveListener();\n\t\t\t\t}\n\t\t\t})();\n\t\t});\n\t}\n\n\tpublic CoreShowChannels(\n\t\toptions: I_ActionCoreShowChannels,\n\t): Promise<I_CoreShowChannel[]> {\n\t\treturn new Promise<I_CoreShowChannel[]>((resolve, reject) => {\n\t\t\t(async () => {\n\t\t\t\tif (_isUndefined(options)) reject(new Error(\"Options are undefined\"));\n\n\t\t\t\toptions.Action = \"CoreShowChannels\";\n\n\t\t\t\tlet channelsCount = 0;\n\t\t\t\tconst channels: I_CoreShowChannel[] = [];\n\n\t\t\t\tconst removeListener = () => {\n\t\t\t\t\tthis.eAmi.events.removeListener(\n\t\t\t\t\t\tAMI_EVENTS.CORE_SHOW_CHANNEL,\n\t\t\t\t\t\tonCORE_SHOW_CHANNEL,\n\t\t\t\t\t);\n\t\t\t\t\tthis.eAmi.events.removeListener(\n\t\t\t\t\t\tAMI_EVENTS.CORE_SHOW_CHANNEL_COMPLETE,\n\t\t\t\t\t\tonCORE_SHOW_CHANNEL_COMPLETE,\n\t\t\t\t\t);\n\t\t\t\t};\n\n\t\t\t\tconst onCORE_SHOW_CHANNEL = (response: I_CoreShowChannel) => {\n\t\t\t\t\tchannels.push(response);\n\n\t\t\t\t\tif (channels.length === channelsCount) {\n\t\t\t\t\t\tresolve(channels);\n\t\t\t\t\t\tremoveListener();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tconst onCORE_SHOW_CHANNEL_COMPLETE = (\n\t\t\t\t\tresponse: I_CoreShowChannelsComplete,\n\t\t\t\t) => {\n\t\t\t\t\tchannelsCount = response.ListItems;\n\n\t\t\t\t\tif (channels.length === channelsCount) {\n\t\t\t\t\t\tresolve(channels);\n\t\t\t\t\t\tremoveListener();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.eAmi.events.once(\n\t\t\t\t\tAMI_EVENTS.CORE_SHOW_CHANNEL_COMPLETE,\n\t\t\t\t\tonCORE_SHOW_CHANNEL_COMPLETE,\n\t\t\t\t);\n\t\t\t\tthis.eAmi.events.on(AMI_EVENTS.CORE_SHOW_CHANNEL, onCORE_SHOW_CHANNEL);\n\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\treject(\n\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t`Timeout to '${options.Action}' action, try again later...`,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t}, this.timeOutAction);\n\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await this.eAmi.action<\n\t\t\t\t\t\tI_ActionCoreShowChannels,\n\t\t\t\t\t\tI_Response\n\t\t\t\t\t>(options);\n\t\t\t\t\tif (response?.Response?.toLowerCase() === \"error\") {\n\t\t\t\t\t\treject(response);\n\t\t\t\t\t\tremoveListener();\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t\tremoveListener();\n\t\t\t\t}\n\t\t\t})();\n\t\t});\n\t}\n\n\tpublic Hangup(options: I_ActionHangup): Promise<I_DualHangup> {\n\t\treturn new Promise<I_DualHangup>((resolve, reject) => {\n\t\t\t(async () => {\n\t\t\t\tif (_isUndefined(options)) reject(new Error(\"Options are undefined\"));\n\n\t\t\t\toptions.Action = \"Hangup\";\n\n\t\t\t\tconst hangup: I_DualHangup = {\n\t\t\t\t\thangup: null,\n\t\t\t\t\thangupRequest: null,\n\t\t\t\t};\n\n\t\t\t\tconst removeListeners = () => {\n\t\t\t\t\tthis.eAmi.events.removeListener(AMI_EVENTS.HANGUP, onHANGUP);\n\t\t\t\t\tthis.eAmi.events.removeListener(\n\t\t\t\t\t\tAMI_EVENTS.HANGUP_REQUEST,\n\t\t\t\t\t\tonHANGUP_REQUEST,\n\t\t\t\t\t);\n\t\t\t\t};\n\n\t\t\t\tconst onHANGUP = (h: I_Hangup) => {\n\t\t\t\t\thangup.hangup = h;\n\t\t\t\t\tif (!_isNull(hangup.hangupRequest)) resolve(hangup);\n\t\t\t\t\tremoveListeners();\n\t\t\t\t};\n\n\t\t\t\tconst onHANGUP_REQUEST = (hr: I_HangupRequest) => {\n\t\t\t\t\thangup.hangupRequest = hr;\n\t\t\t\t\tif (!_isNull(hangup.hangup)) resolve(hangup);\n\t\t\t\t\tremoveListeners();\n\t\t\t\t};\n\n\t\t\t\tthis.eAmi.events.once(AMI_EVENTS.HANGUP, onHANGUP);\n\t\t\t\tthis.eAmi.events.once(AMI_EVENTS.HANGUP_REQUEST, onHANGUP_REQUEST);\n\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\treject(\n\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t`Timeout to '${options.Action}' action, try again later...`,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t}, this.timeOutAction);\n\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await this.eAmi.action<I_ActionHangup, I_Response>(\n\t\t\t\t\t\toptions,\n\t\t\t\t\t);\n\t\t\t\t\tif (response?.Response?.toLowerCase() === \"error\") {\n\t\t\t\t\t\treject(response);\n\t\t\t\t\t\tremoveListeners();\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t\tremoveListeners();\n\t\t\t\t}\n\t\t\t})();\n\t\t});\n\t}\n\n\tpublic Login(options: I_ActionLogin): Promise<boolean> {\n\t\treturn new Promise<boolean>((resolve, reject) => {\n\t\t\t(async () => {\n\t\t\t\tif (_isUndefined(options)) reject(new Error(\"Options are undefined\"));\n\n\t\t\t\toptions.Action = \"Login\";\n\t\t\t\toptions.ActionID = new Date().getTime();\n\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\treject(\n\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t`Timeout to '${options.Action}' action, try again later...`,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t}, this.timeOutAction);\n\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await this.eAmi.action<I_ActionLogin, I_Response>(\n\t\t\t\t\t\toptions,\n\t\t\t\t\t);\n\n\t\t\t\t\tif (response.Response === \"Success\") resolve(true);\n\t\t\t\t\telse if (response.Response === \"Error\") reject(response);\n\t\t\t\t\telse resolve(true);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(\"ERROR LOGIN\", error);\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\t\t\t})();\n\t\t});\n\t}\n\n\tpublic Logout(): Promise<boolean> {\n\t\treturn new Promise<boolean>((resolve, reject) => {\n\t\t\t(async () => {\n\t\t\t\tconst actionId = new Date().getTime();\n\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\treject(new Error(\"Timeout to 'Logoff' action, try again later...\"));\n\t\t\t\t}, this.timeOutAction);\n\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await this.eAmi.action<I_ActionLogout, I_Response>({\n\t\t\t\t\t\tAction: \"Logoff\",\n\t\t\t\t\t\tActionID: actionId,\n\t\t\t\t\t});\n\n\t\t\t\t\tif (this.eAmi.debug) console.log(\"logout-response\", response);\n\t\t\t\t\tif (_isUndefined(response.Response)) reject(response);\n\t\t\t\t\tif (response.Response === \"Goodbye\") resolve(true);\n\t\t\t\t\telse reject(response);\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\t\t\t})();\n\t\t});\n\t}\n\n\tpublic Originate(options: I_ActionOriginate): Promise<boolean> {\n\t\treturn new Promise<boolean>((resolve, reject) => {\n\t\t\t(async () => {\n\t\t\t\tif (_isUndefined(options)) reject(new Error(\"Options are undefined\"));\n\n\t\t\t\toptions.Action = \"Originate\";\n\t\t\t\toptions.ActionID = new Date().getTime();\n\n\t\t\t\tconst removeListener = () => {\n\t\t\t\t\tthis.eAmi.events.removeListener(\n\t\t\t\t\t\t`Action_${options.ActionID}`,\n\t\t\t\t\t\tonActionID,\n\t\t\t\t\t);\n\t\t\t\t};\n\n\t\t\t\tconst onActionID = (response: unknown) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\ttypeof response === \"object\" &&\n\t\t\t\t\t\tresponse !== null &&\n\t\t\t\t\t\t\"Message\" in response\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst message = (response as { Message: string }).Message;\n\n\t\t\t\t\t\tif (_isUndefined(message)) {\n\t\t\t\t\t\t\treject(new Error(\"Message is undefined\"));\n\t\t\t\t\t\t\tremoveListener();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (message.toString().toLowerCase().indexOf(\"failed\") >= 0) {\n\t\t\t\t\t\t\treject(new Error(\"Action failed\"));\n\t\t\t\t\t\t\tremoveListener();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresolve(true);\n\t\t\t\t\t\tremoveListener();\n\t\t\t\t\t} else {\n\t\t\t\t\t\treject(new Error(\"Unexpected response format\"));\n\t\t\t\t\t\tremoveListener();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.eAmi.events.once(`Action_${options.ActionID}`, onActionID);\n\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\treject(\n\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t`Timeout to '${options.Action}' action, try again later...`,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t}, this.timeOutAction);\n\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await this.eAmi.action<\n\t\t\t\t\t\tI_ActionOriginate,\n\t\t\t\t\t\tI_Response\n\t\t\t\t\t>(options);\n\t\t\t\t\tif (response?.Response?.toLowerCase() === \"error\") {\n\t\t\t\t\t\treject(response);\n\t\t\t\t\t\tremoveListener();\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t\tremoveListener();\n\t\t\t\t}\n\t\t\t})();\n\t\t});\n\t}\n\n\tpublic Ping(): Promise<boolean> {\n\t\treturn new Promise<boolean>((resolve, reject) => {\n\t\t\t(async () => {\n\t\t\t\tconst actionID = new Date().getTime();\n\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\treject(new Error(\"Timeout to 'Ping' action, try again later...\"));\n\t\t\t\t}, this.timeOutAction);\n\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await this.eAmi.action<I_ActionPing, I_Response>({\n\t\t\t\t\t\tAction: \"Ping\",\n\t\t\t\t\t\tActionID: actionID,\n\t\t\t\t\t});\n\n\t\t\t\t\tif (response.Response === \"Success\") resolve(true);\n\t\t\t\t\telse if (response.Request?.Completed === true) resolve(true);\n\t\t\t\t\telse if (response.Request?.Completed === false) reject(response);\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\t\t\t})();\n\t\t});\n\t}\n\n\tpublic QueueMemberAdd(\n\t\toptions: I_ActionQueueAdd,\n\t): Promise<I_QueueMemberAdded> {\n\t\treturn new Promise<I_QueueMemberAdded>((resolve, reject) => {\n\t\t\t(async () => {\n\t\t\t\tif (_isUndefined(options)) reject(new Error(\"Options are undefined\"));\n\n\t\t\t\toptions.Action = \"QueueAdd\";\n\n\t\t\t\tconst removeListener = () => {\n\t\t\t\t\tthis.eAmi.events.removeListener(\n\t\t\t\t\t\tAMI_EVENTS.Q_MEMBER_ADDED,\n\t\t\t\t\t\tonQ_MEMBER_ADDED,\n\t\t\t\t\t);\n\t\t\t\t};\n\n\t\t\t\tconst onQ_MEMBER_ADDED = (response: I_QueueMemberAdded) => {\n\t\t\t\t\tresolve(response);\n\t\t\t\t\tremoveListener();\n\t\t\t\t};\n\n\t\t\t\tthis.eAmi.events.once(AMI_EVENTS.Q_MEMBER_ADDED, onQ_MEMBER_ADDED);\n\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\treject(\n\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t`Timeout to '${options.Action}' action, try again later...`,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t}, this.timeOutAction);\n\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await this.eAmi.action<I_ActionQueueAdd, I_Response>(\n\t\t\t\t\t\toptions,\n\t\t\t\t\t);\n\t\t\t\t\tif (response?.Response?.toLowerCase() === \"error\") {\n\t\t\t\t\t\treject(response);\n\t\t\t\t\t\tremoveListener();\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t\tremoveListener();\n\t\t\t\t}\n\t\t\t})();\n\t\t});\n\t}\n\n\tpublic QueueMemberRemove(\n\t\toptions: I_ActionQueueRemove,\n\t): Promise<I_QueueMemberRemoved> {\n\t\treturn new Promise<I_QueueMemberRemoved>((resolve, reject) => {\n\t\t\t(async () => {\n\t\t\t\tif (_isUndefined(options)) reject(new Error(\"Options are undefined\"));\n\n\t\t\t\toptions.Action = \"QueueRemove\";\n\n\t\t\t\tconst removeListener = () => {\n\t\t\t\t\tthis.eAmi.events.removeListener(\n\t\t\t\t\t\tAMI_EVENTS.Q_MEMBER_REMOVED,\n\t\t\t\t\t\tonQ_MEMBER_REMOVED,\n\t\t\t\t\t);\n\t\t\t\t};\n\n\t\t\t\tconst onQ_MEMBER_REMOVED = (response: I_QueueMemberRemoved) => {\n\t\t\t\t\tresolve(response);\n\t\t\t\t\tremoveListener();\n\t\t\t\t};\n\n\t\t\t\tthis.eAmi.events.once(AMI_EVENTS.Q_MEMBER_REMOVED, onQ_MEMBER_REMOVED);\n\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\treject(\n\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t`Timeout to '${options.Action}' action, try again later...`,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t}, this.timeOutAction);\n\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await this.eAmi.action<\n\t\t\t\t\t\tI_ActionQueueRemove,\n\t\t\t\t\t\tI_Response\n\t\t\t\t\t>(options);\n\t\t\t\t\tif (response?.Response?.toLowerCase() === \"error\") {\n\t\t\t\t\t\tremoveListener();\n\t\t\t\t\t\treject(response);\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t\tremoveListener();\n\t\t\t\t}\n\t\t\t})();\n\t\t});\n\t}\n\n\tpublic QueueMemberPenalty(\n\t\toptions: I_ActionQueuePenalty,\n\t): Promise<I_QueueMemberPenalty> {\n\t\treturn new Promise<I_QueueMemberPenalty>((resolve, reject) => {\n\t\t\t(async () => {\n\t\t\t\tif (_isUndefined(options)) reject(new Error(\"Options are undefined\"));\n\n\t\t\t\toptions.Action = \"QueuePenalty\";\n\n\t\t\t\tconst removeListener = () => {\n\t\t\t\t\tthis.eAmi.events.removeListener(\n\t\t\t\t\t\tAMI_EVENTS.Q_MEMBER_PENALTY,\n\t\t\t\t\t\tonQ_MEMBER_PENALTY,\n\t\t\t\t\t);\n\t\t\t\t};\n\n\t\t\t\tconst onQ_MEMBER_PENALTY = (response: I_QueueMemberPenalty) => {\n\t\t\t\t\tresolve(response);\n\t\t\t\t\tremoveListener();\n\t\t\t\t};\n\n\t\t\t\tthis.eAmi.events.once(AMI_EVENTS.Q_MEMBER_PENALTY, onQ_MEMBER_PENALTY);\n\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\treject(\n\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t`Timeout to '${options.Action}' action, try again later...`,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t}, this.timeOutAction);\n\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await this.eAmi.action<\n\t\t\t\t\t\tI_ActionQueuePenalty,\n\t\t\t\t\t\tI_Response\n\t\t\t\t\t>(options);\n\t\t\t\t\tif (response?.Response?.toLowerCase() === \"error\") {\n\t\t\t\t\t\treject(response);\n\t\t\t\t\t\tremoveListener();\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t\tremoveListener();\n\t\t\t\t}\n\t\t\t})();\n\t\t});\n\t}\n\n\tpublic QueueMemberPause(\n\t\toptions: I_ActionQueuePause,\n\t): Promise<I_QueueMemberPause> {\n\t\treturn new Promise<I_QueueMemberPause>((resolve, reject) => {\n\t\t\t(async () => {\n\t\t\t\tif (_isUndefined(options)) reject(new Error(\"Options are undefined\"));\n\n\t\t\t\toptions.Action = \"QueuePause\";\n\n\t\t\t\tconst removeListener = () => {\n\t\t\t\t\tthis.eAmi.events.removeListener(\n\t\t\t\t\t\tAMI_EVENTS.Q_MEMBER_PAUSE,\n\t\t\t\t\t\tonQ_MEMBER_PAUSE,\n\t\t\t\t\t);\n\t\t\t\t};\n\n\t\t\t\tconst onQ_MEMBER_PAUSE = (response: I_QueueMemberPause) => {\n\t\t\t\t\tresolve(response);\n\t\t\t\t\tremoveListener();\n\t\t\t\t};\n\n\t\t\t\tthis.eAmi.events.once(AMI_EVENTS.Q_MEMBER_PAUSE, onQ_MEMBER_PAUSE);\n\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\treject(\n\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t`Timeout to '${options.Action}' action, try again later...`,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t}, this.timeOutAction);\n\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await this.eAmi.action<\n\t\t\t\t\t\tI_ActionQueuePause,\n\t\t\t\t\t\tI_Response\n\t\t\t\t\t>(options);\n\t\t\t\t\tif (response?.Response?.toLowerCase() === \"error\") {\n\t\t\t\t\t\treject(response);\n\t\t\t\t\t\tremoveListener();\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t\tremoveListener();\n\t\t\t\t}\n\t\t\t})();\n\t\t});\n\t}\n\n\tpublic QueueStatus(options: I_ActionQueueStatus): Promise<I_QueueMember[]> {\n\t\treturn new Promise<I_QueueMember[]>((resolve, reject) => {\n\t\t\t(async () => {\n\t\t\t\tif (_isUndefined(options)) reject(new Error(\"Options are undefined\"));\n\n\t\t\t\toptions.Action = \"QueueStatus\";\n\n\t\t\t\tconst members: I_QueueMember[] = [];\n\t\t\t\tlet countMembers = 0;\n\n\t\t\t\tconst removeListener = () => {\n\t\t\t\t\tthis.eAmi.events.removeListener(AMI_EVENTS.Q_MEMBER, onQ_MEMBER);\n\t\t\t\t};\n\n\t\t\t\tconst onQ_MEMBER = (response: I_QueueMember) => {\n\t\t\t\t\tmembers.push(response);\n\n\t\t\t\t\tif (members.length === countMembers) {\n\t\t\t\t\t\tresolve(members);\n\t\t\t\t\t\tremoveListener();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.eAmi.events.on(AMI_EVENTS.Q_MEMBER, onQ_MEMBER);\n\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\treject(\n\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t`Timeout to '${options.Action}' action, try again later...`,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t\tremoveListener();\n\t\t\t\t\tthis.QueueStatus(options);\n\t\t\t\t}, this.timeOutAction);\n\n\t\t\t\ttry {\n\t\t\t\t\tconst summary: I_QueueSummary = await this.QueueSummary({\n\t\t\t\t\t\tQueue: options.Queue,\n\t\t\t\t\t});\n\t\t\t\t\tcountMembers = summary.Available + summary.Callers + summary.LoggedIn;\n\n\t\t\t\t\tif (\n\t\t\t\t\t\toptions.MembersCount !== undefined &&\n\t\t\t\t\t\toptions.MembersCount !== null\n\t\t\t\t\t) {\n\t\t\t\t\t\tcountMembers =\n\t\t\t\t\t\t\tcountMembers === options.MembersCount\n\t\t\t\t\t\t\t\t? countMembers\n\t\t\t\t\t\t\t\t: options.MembersCount;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Garanta que countMembers tenha um valor num\u00E9rico mesmo que MembersCount seja undefined\n\t\t\t\t\t\tcountMembers = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.eAmi.debug) {\n\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\"Count queue members: available - %s, Callers - %s, LoggedIn - %s. Need count - %s\",\n\t\t\t\t\t\t\tsummary.Available,\n\t\t\t\t\t\t\tsummary.Callers,\n\t\t\t\t\t\t\tsummary.LoggedIn,\n\t\t\t\t\t\t\toptions.MembersCount ?? null,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst response = await this.eAmi.action<\n\t\t\t\t\t\tI_ActionQueueStatus,\n\t\t\t\t\t\tI_QueueParams\n\t\t\t\t\t>(options);\n\n\t\t\t\t\tif (\n\t\t\t\t\t\ttypeof response === \"object\" &&\n\t\t\t\t\t\tresponse !== null &&\n\t\t\t\t\t\t\"Response\" in response\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (response.Response?.toLowerCase() === \"error\") {\n\t\t\t\t\t\t\treject(response);\n\t\t\t\t\t\t\tremoveListener();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.eAmi.events.emit(AMI_EVENTS.Q_PARAMS, response);\n\t\t\t\t\t\t\tremoveListener();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t\tremoveListener();\n\t\t\t\t}\n\t\t\t})();\n\t\t});\n\t}\n\n\tpublic QueueSummary(options: I_ActionQueueSummary): Promise<I_QueueSummary> {\n\t\treturn new Promise<I_QueueSummary>((resolve, reject) => {\n\t\t\t(async () => {\n\t\t\t\tif (_isUndefined(options)) reject(new Error(\"Options are undefined\"));\n\n\t\t\t\toptions.Action = \"QueueSummary\";\n\n\t\t\t\tconst removeListener = () => {\n\t\t\t\t\tthis.eAmi.events.removeListener(AMI_EVENTS.Q_SUMMARY, onQ_SUMMARY);\n\t\t\t\t};\n\n\t\t\t\tconst onQ_SUMMARY = (response: I_QueueSummary) => {\n\t\t\t\t\tresolve(response);\n\t\t\t\t\tremoveListener();\n\t\t\t\t};\n\n\t\t\t\tthis.eAmi.events.once(AMI_EVENTS.Q_SUMMARY, onQ_SUMMARY);\n\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\treject(\n\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t`Timeout to '${options.Action}' action, try again later...`,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t}, this.timeOutAction);\n\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await this.eAmi.action<\n\t\t\t\t\t\tI_ActionQueueSummary,\n\t\t\t\t\t\tI_Response\n\t\t\t\t\t>(options);\n\t\t\t\t\tif (response?.Response?.toLowerCase() === \"error\") {\n\t\t\t\t\t\treject(response);\n\t\t\t\t\t\tremoveListener();\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t\tremoveListener();\n\t\t\t\t}\n\t\t\t})();\n\t\t});\n\t}\n\n\tpublic Status(options: I_ActionStatus): Promise<I_Status> {\n\t\treturn new Promise<I_Status>((resolve, reject) => {\n\t\t\t(async () => {\n\t\t\t\tif (_isUndefined(options)) reject(new Error(\"Options are undefined\"));\n\n\t\t\t\toptions.Action = \"Status\";\n\t\t\t\toptions.ActionID = new Date().getTime();\n\n\t\t\t\tconst removeListener = () => {\n\t\t\t\t\tthis.eAmi.events.removeListener(AMI_EVENTS.STATUS, onSTATUS);\n\t\t\t\t};\n\n\t\t\t\tconst onSTATUS = (response: I_Status) => {\n\t\t\t\t\tresolve(response);\n\t\t\t\t\tremoveListener();\n\t\t\t\t};\n\n\t\t\t\tthis.eAmi.events.once(AMI_EVENTS.STATUS, onSTATUS);\n\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\treject(\n\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t`Timeout to '${options.Action}' action, try again later...`,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t}, this.timeOutAction);\n\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await this.eAmi.action<I_ActionStatus, I_Response>(\n\t\t\t\t\t\toptions,\n\t\t\t\t\t);\n\t\t\t\t\tif (response?.Response?.toLowerCase() === \"error\") {\n\t\t\t\t\t\treject(response);\n\t\t\t\t\t\tremoveListener();\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t\tremoveListener();\n\t\t\t\t}\n\t\t\t})();\n\t\t});\n\t}\n}\n", "import type {\n    AMIEvent,\n    AgentComplete,\n    AgentCalled,\n    AOCD,\n    AOCE,\n    AOCS,\n    AGIExecEnd,\n    AGIExecStart,\n} from './types/events.js';\n\nexport function isAgentComplete(evt: AMIEvent): evt is AgentComplete {\n    return evt.Event === 'AgentComplete';\n}\n\nexport function isAgentCalled(evt: AMIEvent): evt is AgentCalled {\n    return evt.Event === 'AgentCalled';\n}\n"],
  "mappings": "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",
  "names": ["EventEmitter", "Socket", "_AMI_EVENTS", "DEFAULT_PORT", "CRLF", "END", "RESEND_TIMEOUT", "HEARTBEAT_INTERVAL", "MAX_RECONNECT_COUNT", "_eAMI_EVENTS", "_isUndefined", "value", "_isNull", "_isEmpty", "_isNaN", "_isNumber", "_toNumber", "parsedNumber", "_isFinite", "_indexOfArray", "array", "i", "item", "key", "eAmiActions", "eAmi", "options", "resolve", "reject", "removeListener", "AMI_EVENTS", "onBRIDGE_INFO_CHANNEL", "response", "error", "_isUndefined", "bridgeItemsCount", "bridgeItems", "onBRIDGE_LIST_COMPLETE", "onBRIDGE_LIST_ITEM", "channelsCount", "channels", "onCORE_SHOW_CHANNEL", "onCORE_SHOW_CHANNEL_COMPLETE", "hangup", "removeListeners", "onHANGUP", "onHANGUP_REQUEST", "h", "_isNull", "hr", "actionId", "onActionID", "message", "actionID", "onQ_MEMBER_ADDED", "onQ_MEMBER_REMOVED", "onQ_MEMBER_PENALTY", "onQ_MEMBER_PAUSE", "members", "countMembers", "onQ_MEMBER", "summary", "onQ_SUMMARY", "onSTATUS", "isAgentComplete", "evt", "isAgentCalled", "eAMI_EVENTS", "_eAMI_EVENTS", "AMI_EVENTS", "_AMI_EVENTS", "eAmi", "allOptions", "connect", "options", "_isUndefined", "_isNull", "DEFAULT_PORT", "HEARTBEAT_INTERVAL", "RESEND_TIMEOUT", "MAX_RECONNECT_COUNT", "EventEmitter", "eAmiActions", "error", "events", "buffer", "CRLF", "request", "actionID", "index", "_indexOfArray", "numActionID", "_toNumber", "searchID", "newRequest", "resolve", "reject", "loginOptions", "error0", "error1", "Socket", "writed", "message", "key", "_request", "response", "_isFinite", "actionIDNumber", "dataStr", "iDelim", "typeResponse", "dataArray", "keyValueArray", "value", "dataObject", "END", "valueNumber", "_isEmpty"]
}
