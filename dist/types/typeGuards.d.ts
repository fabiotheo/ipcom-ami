import type { AGIExecEnd, AGIExecStart, AMIEvent, AOCD, AOCE, AOCS, AgentCalled, AgentComplete, AgentConnect, AgentDump, AgentLogin, AgentLogoff, AgentRingNoAnswer, Agents, AgentsComplete, Alarm, AlarmClear, AorDetail, AorList, AorListComplete, AsyncAGIEnd, AsyncAGIExec, AsyncAGIStart, AttendedTransfer, AuthDetail, AuthList, AuthListComplete, AuthMethodNotAllowed, BlindTransfer, BridgeCreate, BridgeDestroy, BridgeEnter, BridgeInfoChannel, BridgeInfoComplete, BridgeLeave, BridgeMerge, BridgeVideoSourceUpdate, CEL, Cdr, ChallengeResponseFailed, ChallengeSent, ChanSpyStart, ChanSpyStop, ChannelTalkingStart, ChannelTalkingStop, ConfbridgeEnd, ConfbridgeJoin, ConfbridgeLeave, ConfbridgeList, ConfbridgeListRooms, ConfbridgeMute, ConfbridgeRecord, ConfbridgeStart, ConfbridgeStopRecord, ConfbridgeTalking, ConfbridgeUnmute, ContactList, ContactListComplete, ContactStatus, ContactStatusDetail, CoreShowChannel, CoreShowChannelMapComplete, CoreShowChannelsComplete, DAHDIChannel, DNDState, DTMFBegin, DTMFEnd, DeadlockStart, DeviceStateChange, DeviceStateListComplete, DialBegin, DialEnd, DialState, EndpointDetail, EndpointDetailComplete, EndpointList, EndpointListComplete, ExtensionStateListComplete, ExtensionStatus, FAXSession, FAXSessionsComplete, FAXSessionsEntry, FAXStats, FAXStatus, FailedACL, Flash, FullyBooted, Hangup, HangupHandlerPop, HangupHandlerPush, HangupHandlerRun, HangupRequest, Hold, IdentifyDetail, InvalidAccountID, InvalidPassword, InvalidTransport, Load, LoadAverageLimit, LocalBridge, LocalOptimizationBegin, LocalOptimizationEnd, LogChannel, MCID, MWIGet, MWIGetComplete, MeetmeEnd, MeetmeJoin, MeetmeLeave, MeetmeList, MeetmeListRooms, MeetmeMute, MeetmeTalkRequest, MeetmeTalking, MemoryLimit, MessageWaiting, MiniVoiceMail, MixMonitorMute, MixMonitorStart, MixMonitorStop, MonitorStart, MonitorStop, MusicOnHoldStart, MusicOnHoldStop, NewAccountCode, NewCallerid, NewConnectedLine, NewExten, Newchannel, Newstate, OriginateResponse, ParkedCall, ParkedCallGiveUp, ParkedCallSwap, ParkedCallTimeOut, PeerStatus, Pickup, PresenceStateChange, PresenceStateListComplete, PresenceStatus, QueueCallerAbandon, QueueCallerJoin, QueueCallerLeave, QueueEntry, QueueMember, QueueMemberAdded, QueueMemberPause, QueueMemberPenalty, QueueMemberRemoved, QueueMemberRinginuse, QueueMemberStatus, QueueParams, QueueSummary, QueueSummaryComplete, RTCPReceived, RTCPSent, ReceiveFAX, Registry, Reload, Rename, RequestBadFormat, RequestNotAllowed, RequestNotSupported, SIPQualifyPeerDone, SendFAX, SessionLimit, SessionTimeout, Shutdown, SoftHangupRequest, SpanAlarm, SpanAlarmClear, Status, StatusComplete, SuccessfulAuth, TransportDetail, UnParkedCall, UnexpectedAddress, Unhold, Unload, UserEvent, VarSet, VoicemailPasswordChange, Wink } from "./types/events.js";
export declare function isAGIExecEnd(evt: AMIEvent): evt is AGIExecEnd;
export declare function isAGIExecStart(evt: AMIEvent): evt is AGIExecStart;
export declare function isAOCD(evt: AMIEvent): evt is AOCD;
export declare function isAOCE(evt: AMIEvent): evt is AOCE;
export declare function isAOCS(evt: AMIEvent): evt is AOCS;
export declare function isAgentCalled(evt: AMIEvent): evt is AgentCalled;
export declare function isAgentComplete(evt: AMIEvent): evt is AgentComplete;
export declare function isAgentConnect(evt: AMIEvent): evt is AgentConnect;
export declare function isAgentDump(evt: AMIEvent): evt is AgentDump;
export declare function isAgentLogin(evt: AMIEvent): evt is AgentLogin;
export declare function isAgentLogoff(evt: AMIEvent): evt is AgentLogoff;
export declare function isAgentRingNoAnswer(evt: AMIEvent): evt is AgentRingNoAnswer;
export declare function isAgents(evt: AMIEvent): evt is Agents;
export declare function isAgentsComplete(evt: AMIEvent): evt is AgentsComplete;
export declare function isAlarm(evt: AMIEvent): evt is Alarm;
export declare function isAlarmClear(evt: AMIEvent): evt is AlarmClear;
export declare function isAorDetail(evt: AMIEvent): evt is AorDetail;
export declare function isAorList(evt: AMIEvent): evt is AorList;
export declare function isAorListComplete(evt: AMIEvent): evt is AorListComplete;
export declare function isAsyncAGIEnd(evt: AMIEvent): evt is AsyncAGIEnd;
export declare function isAsyncAGIExec(evt: AMIEvent): evt is AsyncAGIExec;
export declare function isAsyncAGIStart(evt: AMIEvent): evt is AsyncAGIStart;
export declare function isAttendedTransfer(evt: AMIEvent): evt is AttendedTransfer;
export declare function isAuthDetail(evt: AMIEvent): evt is AuthDetail;
export declare function isAuthList(evt: AMIEvent): evt is AuthList;
export declare function isAuthListComplete(evt: AMIEvent): evt is AuthListComplete;
export declare function isAuthMethodNotAllowed(evt: AMIEvent): evt is AuthMethodNotAllowed;
export declare function isBlindTransfer(evt: AMIEvent): evt is BlindTransfer;
export declare function isBridgeCreate(evt: AMIEvent): evt is BridgeCreate;
export declare function isBridgeDestroy(evt: AMIEvent): evt is BridgeDestroy;
export declare function isBridgeEnter(evt: AMIEvent): evt is BridgeEnter;
export declare function isBridgeInfoChannel(evt: AMIEvent): evt is BridgeInfoChannel;
export declare function isBridgeInfoComplete(evt: AMIEvent): evt is BridgeInfoComplete;
export declare function isBridgeLeave(evt: AMIEvent): evt is BridgeLeave;
export declare function isBridgeMerge(evt: AMIEvent): evt is BridgeMerge;
export declare function isBridgeVideoSourceUpdate(evt: AMIEvent): evt is BridgeVideoSourceUpdate;
export declare function isCEL(evt: AMIEvent): evt is CEL;
export declare function isCdr(evt: AMIEvent): evt is Cdr;
export declare function isChallengeResponseFailed(evt: AMIEvent): evt is ChallengeResponseFailed;
export declare function isChallengeSent(evt: AMIEvent): evt is ChallengeSent;
export declare function isChanSpyStart(evt: AMIEvent): evt is ChanSpyStart;
export declare function isChanSpyStop(evt: AMIEvent): evt is ChanSpyStop;
export declare function isChannelTalkingStart(evt: AMIEvent): evt is ChannelTalkingStart;
export declare function isChannelTalkingStop(evt: AMIEvent): evt is ChannelTalkingStop;
export declare function isConfbridgeEnd(evt: AMIEvent): evt is ConfbridgeEnd;
export declare function isConfbridgeJoin(evt: AMIEvent): evt is ConfbridgeJoin;
export declare function isConfbridgeLeave(evt: AMIEvent): evt is ConfbridgeLeave;
export declare function isConfbridgeList(evt: AMIEvent): evt is ConfbridgeList;
export declare function isConfbridgeListRooms(evt: AMIEvent): evt is ConfbridgeListRooms;
export declare function isConfbridgeMute(evt: AMIEvent): evt is ConfbridgeMute;
export declare function isConfbridgeRecord(evt: AMIEvent): evt is ConfbridgeRecord;
export declare function isConfbridgeStart(evt: AMIEvent): evt is ConfbridgeStart;
export declare function isConfbridgeStopRecord(evt: AMIEvent): evt is ConfbridgeStopRecord;
export declare function isConfbridgeTalking(evt: AMIEvent): evt is ConfbridgeTalking;
export declare function isConfbridgeUnmute(evt: AMIEvent): evt is ConfbridgeUnmute;
export declare function isContactList(evt: AMIEvent): evt is ContactList;
export declare function isContactListComplete(evt: AMIEvent): evt is ContactListComplete;
export declare function isContactStatus(evt: AMIEvent): evt is ContactStatus;
export declare function isContactStatusDetail(evt: AMIEvent): evt is ContactStatusDetail;
export declare function isCoreShowChannel(evt: AMIEvent): evt is CoreShowChannel;
export declare function isCoreShowChannelMapComplete(evt: AMIEvent): evt is CoreShowChannelMapComplete;
export declare function isCoreShowChannelsComplete(evt: AMIEvent): evt is CoreShowChannelsComplete;
export declare function isDAHDIChannel(evt: AMIEvent): evt is DAHDIChannel;
export declare function isDNDState(evt: AMIEvent): evt is DNDState;
export declare function isDTMFBegin(evt: AMIEvent): evt is DTMFBegin;
export declare function isDTMFEnd(evt: AMIEvent): evt is DTMFEnd;
export declare function isDeadlockStart(evt: AMIEvent): evt is DeadlockStart;
export declare function isDeviceStateChange(evt: AMIEvent): evt is DeviceStateChange;
export declare function isDeviceStateListComplete(evt: AMIEvent): evt is DeviceStateListComplete;
export declare function isDialBegin(evt: AMIEvent): evt is DialBegin;
export declare function isDialEnd(evt: AMIEvent): evt is DialEnd;
export declare function isDialState(evt: AMIEvent): evt is DialState;
export declare function isEndpointDetail(evt: AMIEvent): evt is EndpointDetail;
export declare function isEndpointDetailComplete(evt: AMIEvent): evt is EndpointDetailComplete;
export declare function isEndpointList(evt: AMIEvent): evt is EndpointList;
export declare function isEndpointListComplete(evt: AMIEvent): evt is EndpointListComplete;
export declare function isExtensionStateListComplete(evt: AMIEvent): evt is ExtensionStateListComplete;
export declare function isExtensionStatus(evt: AMIEvent): evt is ExtensionStatus;
export declare function isFAXSession(evt: AMIEvent): evt is FAXSession;
export declare function isFAXSessionsComplete(evt: AMIEvent): evt is FAXSessionsComplete;
export declare function isFAXSessionsEntry(evt: AMIEvent): evt is FAXSessionsEntry;
export declare function isFAXStats(evt: AMIEvent): evt is FAXStats;
export declare function isFAXStatus(evt: AMIEvent): evt is FAXStatus;
export declare function isFailedACL(evt: AMIEvent): evt is FailedACL;
export declare function isFlash(evt: AMIEvent): evt is Flash;
export declare function isFullyBooted(evt: AMIEvent): evt is FullyBooted;
export declare function isHangup(evt: AMIEvent): evt is Hangup;
export declare function isHangupHandlerPop(evt: AMIEvent): evt is HangupHandlerPop;
export declare function isHangupHandlerPush(evt: AMIEvent): evt is HangupHandlerPush;
export declare function isHangupHandlerRun(evt: AMIEvent): evt is HangupHandlerRun;
export declare function isHangupRequest(evt: AMIEvent): evt is HangupRequest;
export declare function isHold(evt: AMIEvent): evt is Hold;
export declare function isIdentifyDetail(evt: AMIEvent): evt is IdentifyDetail;
export declare function isInvalidAccountID(evt: AMIEvent): evt is InvalidAccountID;
export declare function isInvalidPassword(evt: AMIEvent): evt is InvalidPassword;
export declare function isInvalidTransport(evt: AMIEvent): evt is InvalidTransport;
export declare function isLoad(evt: AMIEvent): evt is Load;
export declare function isLoadAverageLimit(evt: AMIEvent): evt is LoadAverageLimit;
export declare function isLocalBridge(evt: AMIEvent): evt is LocalBridge;
export declare function isLocalOptimizationBegin(evt: AMIEvent): evt is LocalOptimizationBegin;
export declare function isLocalOptimizationEnd(evt: AMIEvent): evt is LocalOptimizationEnd;
export declare function isLogChannel(evt: AMIEvent): evt is LogChannel;
export declare function isMCID(evt: AMIEvent): evt is MCID;
export declare function isMWIGet(evt: AMIEvent): evt is MWIGet;
export declare function isMWIGetComplete(evt: AMIEvent): evt is MWIGetComplete;
export declare function isMeetmeEnd(evt: AMIEvent): evt is MeetmeEnd;
export declare function isMeetmeJoin(evt: AMIEvent): evt is MeetmeJoin;
export declare function isMeetmeLeave(evt: AMIEvent): evt is MeetmeLeave;
export declare function isMeetmeList(evt: AMIEvent): evt is MeetmeList;
export declare function isMeetmeListRooms(evt: AMIEvent): evt is MeetmeListRooms;
export declare function isMeetmeMute(evt: AMIEvent): evt is MeetmeMute;
export declare function isMeetmeTalkRequest(evt: AMIEvent): evt is MeetmeTalkRequest;
export declare function isMeetmeTalking(evt: AMIEvent): evt is MeetmeTalking;
export declare function isMemoryLimit(evt: AMIEvent): evt is MemoryLimit;
export declare function isMessageWaiting(evt: AMIEvent): evt is MessageWaiting;
export declare function isMiniVoiceMail(evt: AMIEvent): evt is MiniVoiceMail;
export declare function isMixMonitorMute(evt: AMIEvent): evt is MixMonitorMute;
export declare function isMixMonitorStart(evt: AMIEvent): evt is MixMonitorStart;
export declare function isMixMonitorStop(evt: AMIEvent): evt is MixMonitorStop;
export declare function isMonitorStart(evt: AMIEvent): evt is MonitorStart;
export declare function isMonitorStop(evt: AMIEvent): evt is MonitorStop;
export declare function isMusicOnHoldStart(evt: AMIEvent): evt is MusicOnHoldStart;
export declare function isMusicOnHoldStop(evt: AMIEvent): evt is MusicOnHoldStop;
export declare function isNewAccountCode(evt: AMIEvent): evt is NewAccountCode;
export declare function isNewCallerid(evt: AMIEvent): evt is NewCallerid;
export declare function isNewConnectedLine(evt: AMIEvent): evt is NewConnectedLine;
export declare function isNewExten(evt: AMIEvent): evt is NewExten;
export declare function isNewchannel(evt: AMIEvent): evt is Newchannel;
export declare function isNewstate(evt: AMIEvent): evt is Newstate;
export declare function isOriginateResponse(evt: AMIEvent): evt is OriginateResponse;
export declare function isParkedCall(evt: AMIEvent): evt is ParkedCall;
export declare function isParkedCallGiveUp(evt: AMIEvent): evt is ParkedCallGiveUp;
export declare function isParkedCallSwap(evt: AMIEvent): evt is ParkedCallSwap;
export declare function isParkedCallTimeOut(evt: AMIEvent): evt is ParkedCallTimeOut;
export declare function isPeerStatus(evt: AMIEvent): evt is PeerStatus;
export declare function isPickup(evt: AMIEvent): evt is Pickup;
export declare function isPresenceStateChange(evt: AMIEvent): evt is PresenceStateChange;
export declare function isPresenceStateListComplete(evt: AMIEvent): evt is PresenceStateListComplete;
export declare function isPresenceStatus(evt: AMIEvent): evt is PresenceStatus;
export declare function isQueueSummary(evt: AMIEvent): evt is QueueSummary;
export declare function isQueueSummaryComplete(evt: AMIEvent): evt is QueueSummaryComplete;
export declare function isQueueMember(evt: AMIEvent): evt is QueueMember;
export declare function isQueueCallerAbandon(evt: AMIEvent): evt is QueueCallerAbandon;
export declare function isQueueCallerJoin(evt: AMIEvent): evt is QueueCallerJoin;
export declare function isQueueCallerLeave(evt: AMIEvent): evt is QueueCallerLeave;
export declare function isQueueEntry(evt: AMIEvent): evt is QueueEntry;
export declare function isQueueMemberAdded(evt: AMIEvent): evt is QueueMemberAdded;
export declare function isQueueMemberPause(evt: AMIEvent): evt is QueueMemberPause;
export declare function isQueueMemberPenalty(evt: AMIEvent): evt is QueueMemberPenalty;
export declare function isQueueMemberRemoved(evt: AMIEvent): evt is QueueMemberRemoved;
export declare function isQueueMemberRinginuse(evt: AMIEvent): evt is QueueMemberRinginuse;
export declare function isQueueMemberStatus(evt: AMIEvent): evt is QueueMemberStatus;
export declare function isQueueParams(evt: AMIEvent): evt is QueueParams;
export declare function isRTCPReceived(evt: AMIEvent): evt is RTCPReceived;
export declare function isRTCPSent(evt: AMIEvent): evt is RTCPSent;
export declare function isReceiveFAX(evt: AMIEvent): evt is ReceiveFAX;
export declare function isRegistry(evt: AMIEvent): evt is Registry;
export declare function isReload(evt: AMIEvent): evt is Reload;
export declare function isRename(evt: AMIEvent): evt is Rename;
export declare function isRequestBadFormat(evt: AMIEvent): evt is RequestBadFormat;
export declare function isRequestNotAllowed(evt: AMIEvent): evt is RequestNotAllowed;
export declare function isRequestNotSupported(evt: AMIEvent): evt is RequestNotSupported;
export declare function isSIPQualifyPeerDone(evt: AMIEvent): evt is SIPQualifyPeerDone;
export declare function isSendFAX(evt: AMIEvent): evt is SendFAX;
export declare function isSessionLimit(evt: AMIEvent): evt is SessionLimit;
export declare function isSessionTimeout(evt: AMIEvent): evt is SessionTimeout;
export declare function isShutdown(evt: AMIEvent): evt is Shutdown;
export declare function isSoftHangupRequest(evt: AMIEvent): evt is SoftHangupRequest;
export declare function isSpanAlarm(evt: AMIEvent): evt is SpanAlarm;
export declare function isSpanAlarmClear(evt: AMIEvent): evt is SpanAlarmClear;
export declare function isStatus(evt: AMIEvent): evt is Status;
export declare function isStatusComplete(evt: AMIEvent): evt is StatusComplete;
export declare function isSuccessfulAuth(evt: AMIEvent): evt is SuccessfulAuth;
export declare function isTransportDetail(evt: AMIEvent): evt is TransportDetail;
export declare function isUnParkedCall(evt: AMIEvent): evt is UnParkedCall;
export declare function isUnexpectedAddress(evt: AMIEvent): evt is UnexpectedAddress;
export declare function isUnhold(evt: AMIEvent): evt is Unhold;
export declare function isUnload(evt: AMIEvent): evt is Unload;
export declare function isUserEvent(evt: AMIEvent): evt is UserEvent;
export declare function isVarSet(evt: AMIEvent): evt is VarSet;
export declare function isVoicemailPasswordChange(evt: AMIEvent): evt is VoicemailPasswordChange;
export declare function isWink(evt: AMIEvent): evt is Wink;
//# sourceMappingURL=typeGuards.d.ts.map